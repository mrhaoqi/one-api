{"version":3,"file":"static/js/516.0b6e7cab.chunk.js","mappings":"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","sources":["views/Channel/component/ResponseTimeLabel.js","views/Channel/component/GroupLabel.js","views/Channel/component/NameLabel.js","views/Channel/component/TableRow.js","views/Channel/component/TableHead.js","../node_modules/@tabler/icons-react/src/icons/IconBrandSpeedtest.js","../node_modules/@tabler/icons-react/src/icons/IconHttpDelete.js","../node_modules/@tabler/icons-react/src/icons/IconCoinYuan.js","views/Channel/type/Config.js","views/Channel/component/EditModal.js","views/Channel/index.js","ui-component/Label.js","constants/CommonConstants.js","../node_modules/@mui/icons-material/CheckBoxOutlineBlank.js","ui-component/TableToolBar.js","../node_modules/@mui/icons-material/CheckBox.js","../node_modules/@mui/material/TextField/textFieldClasses.js","../node_modules/@mui/material/TextField/TextField.js","constants/ChannelConstants.js","ui-component/Switch.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport Label from 'ui-component/Label';\nimport Tooltip from '@mui/material/Tooltip';\nimport { timestamp2string } from 'utils/common';\n\nconst ResponseTimeLabel = ({ test_time, response_time, handle_action }) => {\n  let color = 'default';\n  let time = response_time / 1000;\n  time = time.toFixed(2) + ' 秒';\n\n  if (response_time === 0) {\n    color = 'default';\n  } else if (response_time <= 1000) {\n    color = 'success';\n  } else if (response_time <= 3000) {\n    color = 'primary';\n  } else if (response_time <= 5000) {\n    color = 'secondary';\n  } else {\n    color = 'error';\n  }\n  let title = (\n    <>\n      点击测速\n      <br />\n      {test_time != 0 ? '上次测速时间：' + timestamp2string(test_time) : '未测试'}\n    </>\n  );\n\n  return (\n    <Tooltip title={title} placement=\"top\" onClick={handle_action}>\n      <Label color={color}> {response_time == 0 ? '未测试' : time} </Label>\n    </Tooltip>\n  );\n};\n\nResponseTimeLabel.propTypes = {\n  test_time: PropTypes.number,\n  response_time: PropTypes.number,\n  handle_action: PropTypes.func\n};\n\nexport default ResponseTimeLabel;\n","import PropTypes from \"prop-types\";\nimport Label from \"ui-component/Label\";\nimport Stack from \"@mui/material/Stack\";\nimport Divider from \"@mui/material/Divider\";\n\nfunction name2color(name) {\n  switch (name) {\n    case \"default\":\n      return \"info\";\n    case \"vip\":\n      return \"warning\"\n    case \"svip\":\n      return \"error\"\n    default:\n      return \"info\"\n  }\n}\n\nconst GroupLabel = ({ group }) => {\n  let groups = [];\n  if (group === \"\") {\n    groups = [\"default\"];\n  } else {\n    groups = group.split(\",\");\n    groups.sort();\n  }\n  return (\n    <Stack divider={<Divider orientation=\"vertical\" flexItem />} spacing={0.5}>\n      {groups.map((group, index) => {\n        return <Label key={index} color={name2color(group)}>{group}</Label>;\n      })}\n    </Stack>\n  );\n};\n\nGroupLabel.propTypes = {\n  group: PropTypes.string,\n};\n\nexport default GroupLabel;\n","import PropTypes from 'prop-types';\nimport { Tooltip, Stack, Container } from '@mui/material';\nimport Label from 'ui-component/Label';\nimport { styled } from '@mui/material/styles';\nimport { showSuccess, copy } from 'utils/common';\n\nconst TooltipContainer = styled(Container)({\n  maxHeight: '250px',\n  overflow: 'auto',\n  '&::-webkit-scrollbar': {\n    width: '0px' // Set the width to 0 to hide the scrollbar\n  }\n});\n\nconst NameLabel = ({ name, models }) => {\n  let modelMap = [];\n  modelMap = models.split(',');\n  modelMap.sort();\n\n  return (\n    <Tooltip\n      title={\n        <TooltipContainer>\n          <Stack spacing={1}>\n            {modelMap.map((item, index) => {\n              return (\n                <Label\n                  variant=\"ghost\"\n                  key={index}\n                  onClick={() => {\n                    copy(item, '模型名称');\n                  }}\n                >\n                  {item}\n                </Label>\n              );\n            })}\n          </Stack>\n        </TooltipContainer>\n      }\n      placement=\"top\"\n    >\n      <span>{name}</span>\n    </Tooltip>\n  );\n};\n\nNameLabel.propTypes = {\n  name: PropTypes.string,\n  models: PropTypes.string\n};\n\nexport default NameLabel;\n","import PropTypes from \"prop-types\";\nimport { useState } from \"react\";\n\nimport { showInfo, showError, renderNumber } from \"utils/common\";\nimport { API } from \"utils/api\";\nimport { CHANNEL_OPTIONS } from \"constants/ChannelConstants\";\n\nimport {\n  Popover,\n  TableRow,\n  MenuItem,\n  TableCell,\n  IconButton,\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Tooltip,\n  Button,\n} from \"@mui/material\";\n\nimport Label from \"ui-component/Label\";\nimport TableSwitch from \"ui-component/Switch\";\n\nimport ResponseTimeLabel from \"./ResponseTimeLabel\";\nimport GroupLabel from \"./GroupLabel\";\nimport NameLabel from \"./NameLabel\";\n\nimport { IconDotsVertical, IconEdit, IconTrash } from \"@tabler/icons-react\";\n\nexport default function ChannelTableRow({\n  item,\n  manageChannel,\n  handleOpenModal,\n  setModalChannelId,\n}) {\n  const [open, setOpen] = useState(null);\n  const [openDelete, setOpenDelete] = useState(false);\n  const [statusSwitch, setStatusSwitch] = useState(item.status);\n  const [priorityValve, setPriority] = useState(item.priority);\n  const [responseTimeData, setResponseTimeData] = useState({\n    test_time: item.test_time,\n    response_time: item.response_time,\n  });\n  const [itemBalance, setItemBalance] = useState(item.balance);\n\n  const handleDeleteOpen = () => {\n    handleCloseMenu();\n    setOpenDelete(true);\n  };\n\n  const handleDeleteClose = () => {\n    setOpenDelete(false);\n  };\n\n  const handleOpenMenu = (event) => {\n    setOpen(event.currentTarget);\n  };\n\n  const handleCloseMenu = () => {\n    setOpen(null);\n  };\n\n  const handleStatus = async () => {\n    const switchVlue = statusSwitch === 1 ? 2 : 1;\n    const { success } = await manageChannel(item.id, \"status\", switchVlue);\n    if (success) {\n      setStatusSwitch(switchVlue);\n    }\n  };\n\n  const handlePriority = async (event) => {\n    const currentValue = parseInt(event.target.value);\n    if (isNaN(currentValue) || currentValue === priorityValve) {\n      return;\n    }\n\n    if (currentValue < 0) {\n      showError(\"优先级不能小于 0\");\n      return;\n    }\n\n    await manageChannel(item.id, \"priority\", currentValue);\n    setPriority(currentValue);\n  };\n\n  const handleResponseTime = async () => {\n    const { success, time } = await manageChannel(item.id, \"test\", \"\");\n    if (success) {\n      setResponseTimeData({\n        test_time: Date.now() / 1000,\n        response_time: time * 1000,\n      });\n      showInfo(`渠道 ${item.name} 测试成功，耗时 ${time.toFixed(2)} 秒。`);\n    }\n  };\n\n  const updateChannelBalance = async () => {\n    const res = await API.get(`/api/channel/update_balance/${item.id}`);\n    const { success, message, balance } = res.data;\n    if (success) {\n      setItemBalance(balance);\n\n      showInfo(`余额更新成功！`);\n    } else {\n      showError(message);\n    }\n  };\n\n  const handleDelete = async () => {\n    handleCloseMenu();\n    await manageChannel(item.id, \"delete\", \"\");\n  };\n\n  return (\n    <>\n      <TableRow tabIndex={item.id}>\n        <TableCell>{item.id}</TableCell>\n\n        <TableCell>\n          <NameLabel name={item.name} models={item.models} />\n        </TableCell>\n\n        <TableCell>\n          <GroupLabel group={item.group} />\n        </TableCell>\n\n        <TableCell>\n          {!CHANNEL_OPTIONS[item.type] ? (\n            <Label color=\"error\" variant=\"outlined\">\n              未知\n            </Label>\n          ) : (\n            <Label color={CHANNEL_OPTIONS[item.type].color} variant=\"outlined\">\n              {CHANNEL_OPTIONS[item.type].text}\n            </Label>\n          )}\n        </TableCell>\n\n        <TableCell>\n          <Tooltip\n            title={(() => {\n              switch (statusSwitch) {\n                case 1:\n                  return \"已启用\";\n                case 2:\n                  return \"本渠道被手动禁用\";\n                case 3:\n                  return \"本渠道被程序自动禁用\";\n                default:\n                  return \"未知\";\n              }\n            })()}\n            placement=\"top\"\n          >\n            <TableSwitch\n              id={`switch-${item.id}`}\n              checked={statusSwitch === 1}\n              onChange={handleStatus}\n            />\n          </Tooltip>\n        </TableCell>\n\n        <TableCell>\n          <ResponseTimeLabel\n            test_time={responseTimeData.test_time}\n            response_time={responseTimeData.response_time}\n            handle_action={handleResponseTime}\n          />\n        </TableCell>\n        <TableCell>{renderNumber(item.used_quota)}</TableCell>\n        <TableCell>\n          <Tooltip\n            title={\"点击更新余额\"}\n            placement=\"top\"\n            onClick={updateChannelBalance}\n          >\n            {renderBalance(item.type, itemBalance)}\n          </Tooltip>\n        </TableCell>\n        <TableCell>\n          <TextField\n            id={`priority-${item.id}`}\n            onBlur={handlePriority}\n            type=\"number\"\n            label=\"优先级\"\n            variant=\"standard\"\n            defaultValue={item.priority}\n            inputProps={{ min: \"0\" }}\n            sx={{ width: 80 }}\n          />\n        </TableCell>\n\n        <TableCell>\n          <IconButton\n            onClick={handleOpenMenu}\n            sx={{ color: \"rgb(99, 115, 129)\" }}\n          >\n            <IconDotsVertical />\n          </IconButton>\n        </TableCell>\n      </TableRow>\n\n      <Popover\n        open={!!open}\n        anchorEl={open}\n        onClose={handleCloseMenu}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"left\" }}\n        transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n        PaperProps={{\n          sx: { width: 140 },\n        }}\n      >\n        <MenuItem\n          onClick={() => {\n            handleCloseMenu();\n            handleOpenModal();\n            setModalChannelId(item.id);\n          }}\n        >\n          <IconEdit style={{ marginRight: \"16px\" }} />\n          编辑\n        </MenuItem>\n        <MenuItem onClick={handleDeleteOpen} sx={{ color: \"error.main\" }}>\n          <IconTrash style={{ marginRight: \"16px\" }} />\n          删除\n        </MenuItem>\n      </Popover>\n\n      <Dialog open={openDelete} onClose={handleDeleteClose}>\n        <DialogTitle>删除渠道</DialogTitle>\n        <DialogContent>\n          <DialogContentText>是否删除渠道 {item.name}？</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleDeleteClose}>关闭</Button>\n          <Button onClick={handleDelete} sx={{ color: \"error.main\" }} autoFocus>\n            删除\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nChannelTableRow.propTypes = {\n  item: PropTypes.object,\n  manageChannel: PropTypes.func,\n  handleOpenModal: PropTypes.func,\n  setModalChannelId: PropTypes.func,\n};\n\nfunction renderBalance(type, balance) {\n  switch (type) {\n    case 1: // OpenAI\n      return <span>${balance.toFixed(2)}</span>;\n    case 4: // CloseAI\n      return <span>¥{balance.toFixed(2)}</span>;\n    case 8: // 自定义\n      return <span>${balance.toFixed(2)}</span>;\n    case 5: // OpenAI-SB\n      return <span>¥{(balance / 10000).toFixed(2)}</span>;\n    case 10: // AI Proxy\n      return <span>{renderNumber(balance)}</span>;\n    case 12: // API2GPT\n      return <span>¥{balance.toFixed(2)}</span>;\n    case 13: // AIGC2D\n      return <span>{renderNumber(balance)}</span>;\n    case 36: // DeepSeek\n      return <span>¥{balance.toFixed(2)}</span>;\n    case 44: // SiliconFlow\n      return <span>¥{balance.toFixed(2)}</span>;\n    default:\n      return <span>不支持</span>;\n  }\n}\n","import { TableCell, TableHead, TableRow } from '@mui/material';\n\nconst ChannelTableHead = () => {\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell>ID</TableCell>\n        <TableCell>名称</TableCell>\n        <TableCell>分组</TableCell>\n        <TableCell>类型</TableCell>\n        <TableCell>状态</TableCell>\n        <TableCell>响应时间</TableCell>\n        <TableCell>已消耗</TableCell>\n        <TableCell>余额</TableCell>\n        <TableCell>优先级</TableCell>\n        <TableCell>操作</TableCell>\n      </TableRow>\n    </TableHead>\n  );\n};\n\nexport default ChannelTableHead;\n","import createReactComponent from '../createReactComponent';\nexport default createReactComponent('brand-speedtest', 'IconBrandSpeedtest', [\n  ['path', { d: 'M5.636 19.364a9 9 0 1 1 12.728 0', key: 'svg-0' }],\n  ['path', { d: 'M16 9l-4 4', key: 'svg-1' }],\n]);\n","import createReactComponent from '../createReactComponent';\nexport default createReactComponent('http-delete', 'IconHttpDelete', [\n  [\n    'path',\n    { d: 'M3 8v8h2a2 2 0 0 0 2 -2v-4a2 2 0 0 0 -2 -2h-2z', key: 'svg-0' },\n  ],\n  ['path', { d: 'M14 8h-4v8h4', key: 'svg-1' }],\n  ['path', { d: 'M10 12h2.5', key: 'svg-2' }],\n  ['path', { d: 'M17 8v8h4', key: 'svg-3' }],\n]);\n","import createReactComponent from '../createReactComponent';\nexport default createReactComponent('coin-yuan', 'IconCoinYuan', [\n  ['path', { d: 'M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0', key: 'svg-0' }],\n  ['path', { d: 'M9 13h6', key: 'svg-1' }],\n  ['path', { d: 'M9 8l3 4.5', key: 'svg-2' }],\n  ['path', { d: 'M15 8l-3 4.5v4.5', key: 'svg-3' }],\n]);\n","const defaultConfig = {\n  input: {\n    name: '',\n    type: 1,\n    key: '',\n    base_url: '',\n    other: '',\n    model_mapping: '',\n    models: [],\n    groups: ['default'],\n    config: {}\n  },\n  inputLabel: {\n    name: '渠道名称',\n    type: '渠道类型',\n    base_url: '渠道API地址',\n    key: '密钥',\n    other: '其他参数',\n    models: '模型',\n    model_mapping: '模型映射关系',\n    system_prompt: '系统提示词',\n    groups: '用户组',\n    config: null\n  },\n  prompt: {\n    type: '请选择渠道类型',\n    name: '请为渠道命名',\n    base_url: '可空，请输入中转API地址，例如通过cloudflare中转',\n    key: '请输入渠道对应的鉴权密钥',\n    other: '',\n    models: '请选择该渠道所支持的模型',\n    model_mapping:\n      '请输入要修改的模型映射关系，格式为：api请求模型ID:实际转发给渠道的模型ID，使用JSON数组表示，例如：{\"gpt-3.5\": \"gpt-35\"}',\n    system_prompt:\"此项可选，用于强制设置给定的系统提示词，请配合自定义模型 & 模型重定向使用，首先创建一个唯一的自定义模型名称并在上面填入，之后将该自定义模型重定向映射到该渠道一个原生支持的模型此项可选，用于强制设置给定的系统提示词，请配合自定义模型 & 模型重定向使用，首先创建一个唯一的自定义模型名称并在上面填入，之后将该自定义模型重定向映射到该渠道一个原生支持的模型\",\n    groups: '请选择该渠道所支持的用户组',\n    config: null\n  },\n  modelGroup: 'openai'\n};\n\nconst typeConfig = {\n  3: {\n    inputLabel: {\n      base_url: 'AZURE_OPENAI_ENDPOINT',\n      other: '默认 API 版本'\n    },\n    prompt: {\n      base_url: '请填写AZURE_OPENAI_ENDPOINT',\n      other: '请输入默认API版本，例如：2024-03-01-preview'\n    }\n  },\n  11: {\n    input: {\n      models: ['PaLM-2']\n    },\n    modelGroup: 'google palm'\n  },\n  14: {\n    input: {\n      models: ['claude-instant-1', 'claude-2', 'claude-2.0', 'claude-2.1']\n    },\n    modelGroup: 'anthropic'\n  },\n  15: {\n    input: {\n      models: ['ERNIE-Bot', 'ERNIE-Bot-turbo', 'ERNIE-Bot-4', 'Embedding-V1']\n    },\n    prompt: {\n      key: '按照如下格式输入：APIKey|SecretKey'\n    },\n    modelGroup: 'baidu'\n  },\n  16: {\n    input: {\n      models: ['glm-4', 'glm-4v', 'glm-3-turbo', 'chatglm_turbo', 'chatglm_pro', 'chatglm_std', 'chatglm_lite']\n    },\n    modelGroup: 'zhipu'\n  },\n  17: {\n    inputLabel: {\n      other: '插件参数'\n    },\n    input: {\n      models: ['qwen-turbo', 'qwen-plus', 'qwen-max', 'qwen-max-longcontext', 'text-embedding-v1']\n    },\n    prompt: {\n      other: '请输入插件参数，即 X-DashScope-Plugin 请求头的取值'\n    },\n    modelGroup: 'ali'\n  },\n  18: {\n    inputLabel: {\n      other: '版本号'\n    },\n    input: {\n      models: ['SparkDesk', 'SparkDesk-v1.1', 'SparkDesk-v2.1', 'SparkDesk-v3.1', 'SparkDesk-v3.1-128K', 'SparkDesk-v3.5', 'SparkDesk-v3.5-32K', 'SparkDesk-v4.0']\n    },\n    prompt: {\n      key: '按照如下格式输入：APPID|APISecret|APIKey',\n      other: '请输入版本号，例如：v3.1'\n    },\n    modelGroup: 'xunfei'\n  },\n  19: {\n    input: {\n      models: ['360GPT_S2_V9', 'embedding-bert-512-v1', 'embedding_s1_v1', 'semantic_similarity_s1_v1']\n    },\n    modelGroup: '360'\n  },\n  22: {\n    prompt: {\n      key: '按照如下格式输入：APIKey-AppId，例如：fastgpt-0sp2gtvfdgyi4k30jwlgwf1i-64f335d84283f05518e9e041'\n    }\n  },\n  23: {\n    input: {\n      models: ['hunyuan']\n    },\n    prompt: {\n      key: '按照如下格式输入：AppId|SecretId|SecretKey'\n    },\n    modelGroup: 'tencent'\n  },\n  24: {\n    inputLabel: {\n      other: '版本号'\n    },\n    input: {\n      models: ['gemini-pro']\n    },\n    prompt: {\n      other: '请输入版本号，例如：v1'\n    },\n    modelGroup: 'google gemini'\n  },\n  25: {\n    input: {\n      models: ['moonshot-v1-8k', 'moonshot-v1-32k', 'moonshot-v1-128k']\n    },\n    modelGroup: 'moonshot'\n  },\n  26: {\n    input: {\n      models: ['Baichuan2-Turbo', 'Baichuan2-Turbo-192k', 'Baichuan-Text-Embedding']\n    },\n    modelGroup: 'baichuan'\n  },\n  27: {\n    input: {\n      models: ['abab5.5s-chat', 'abab5.5-chat', 'abab6-chat']\n    },\n    modelGroup: 'minimax'\n  },\n  29: {\n    modelGroup: 'groq'\n  },\n  30: {\n    modelGroup: 'ollama'\n  },\n  31: {\n    modelGroup: 'lingyiwanwu'\n  },\n  33: {\n    inputLabel: {\n      key: '',\n      config: {\n        region: 'Region',\n        ak: 'Access Key',\n        sk: 'Secret Key'\n      }\n    },\n    prompt: {\n      key: '',\n      config: {\n        region: 'region，e.g. us-west-2',\n        ak: 'AWS IAM Access Key',\n        sk: 'AWS IAM Secret Key'\n      }\n    },\n    modelGroup: 'anthropic'\n  },\n  37: {\n    inputLabel: {\n      config: {\n        user_id: 'Account ID'\n      }\n    },\n    prompt: {\n      config: {\n        user_id: '请输入 Account ID，例如：d8d7c61dbc334c32d3ced580e4bf42b4'\n      }\n    },\n    modelGroup: 'Cloudflare'\n  },\n  34: {\n    inputLabel: {\n      config: {\n        user_id: 'User ID'\n      }\n    },\n    prompt: {\n      models: '对于 Coze 而言，模型名称即 Bot ID，你可以添加一个前缀 `bot-`，例如：`bot-123456`',\n      config: {\n        user_id: '生成该密钥的用户 ID'\n      }\n    },\n    modelGroup: 'Coze'\n  },\n  42: {\n    inputLabel: {\n      key: '',\n      config: {\n        region: 'Vertex AI Region',\n        vertex_ai_project_id: 'Vertex AI Project ID',\n        vertex_ai_adc: 'Google Cloud Application Default Credentials JSON'\n      }\n    },\n    prompt: {\n      key: '',\n      config: {\n        region: 'Vertex AI Region.g. us-east5',\n        vertex_ai_project_id: 'Vertex AI Project ID',\n        vertex_ai_adc: 'Google Cloud Application Default Credentials JSON: https://cloud.google.com/docs/authentication/application-default-credentials'\n      }\n    },\n    modelGroup: 'anthropic'\n  },\n  45: {\n    modelGroup: 'xai'\n  },\n};\n\nexport { defaultConfig, typeConfig };\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { CHANNEL_OPTIONS } from 'constants/ChannelConstants';\nimport { useTheme } from '@mui/material/styles';\nimport { API } from 'utils/api';\nimport { showError, showSuccess, getChannelModels } from 'utils/common';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  Button,\n  Divider,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  OutlinedInput,\n  ButtonGroup,\n  Container,\n  Autocomplete,\n  FormHelperText,\n  Switch,\n  Checkbox\n} from '@mui/material';\n\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { defaultConfig, typeConfig } from '../type/Config'; //typeConfig\nimport { createFilterOptions } from '@mui/material/Autocomplete';\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\nconst filter = createFilterOptions();\nconst validationSchema = Yup.object().shape({\n  is_edit: Yup.boolean(),\n  name: Yup.string().required('名称 不能为空'),\n  type: Yup.number().required('渠道 不能为空'),\n  key: Yup.string().when(['is_edit', 'type'], {\n    is: (is_edit, type) => !is_edit && type !== 33,\n    then: Yup.string().required('密钥 不能为空')\n  }),\n  other: Yup.string(),\n  models: Yup.array().min(1, '模型 不能为空'),\n  groups: Yup.array().min(1, '用户组 不能为空'),\n  base_url: Yup.string().when('type', {\n    is: (value) => [3, 8].includes(value),\n    then: Yup.string().required('渠道API地址 不能为空'), // base_url 是必需的\n    otherwise: Yup.string() // 在其他情况下，base_url 可以是任意字符串\n  }),\n  model_mapping: Yup.string().test('is-json', '必须是有效的JSON字符串', function (value) {\n    try {\n      if (value === '' || value === null || value === undefined) {\n        return true;\n      }\n      const parsedValue = JSON.parse(value);\n      if (typeof parsedValue === 'object') {\n        return true;\n      }\n    } catch (e) {\n      return false;\n    }\n    return false;\n  })\n});\n\nconst EditModal = ({ open, channelId, onCancel, onOk }) => {\n  const theme = useTheme();\n  // const [loading, setLoading] = useState(false);\n  const [initialInput, setInitialInput] = useState(defaultConfig.input);\n  const [inputLabel, setInputLabel] = useState(defaultConfig.inputLabel); //\n  const [inputPrompt, setInputPrompt] = useState(defaultConfig.prompt);\n  const [groupOptions, setGroupOptions] = useState([]);\n  const [modelOptions, setModelOptions] = useState([]);\n  const [batchAdd, setBatchAdd] = useState(false);\n  const [basicModels, setBasicModels] = useState([]);\n\n  const initChannel = (typeValue) => {\n    if (typeConfig[typeValue]?.inputLabel) {\n      setInputLabel({\n        ...defaultConfig.inputLabel,\n        ...typeConfig[typeValue].inputLabel\n      });\n    } else {\n      setInputLabel(defaultConfig.inputLabel);\n    }\n\n    if (typeConfig[typeValue]?.prompt) {\n      setInputPrompt({\n        ...defaultConfig.prompt,\n        ...typeConfig[typeValue].prompt\n      });\n    } else {\n      setInputPrompt(defaultConfig.prompt);\n    }\n\n    return typeConfig[typeValue]?.input;\n  };\n  const handleTypeChange = (setFieldValue, typeValue, values) => {\n    initChannel(typeValue);\n    let localModels = getChannelModels(typeValue);\n    setBasicModels(localModels);\n    if (localModels.length > 0 && Array.isArray(values['models']) && values['models'].length == 0) {\n      setFieldValue('models', initialModel(localModels));\n    }\n\n    setFieldValue('config', {});\n  };\n\n  const fetchGroups = async () => {\n    try {\n      let res = await API.get(`/api/group/`);\n      setGroupOptions(res.data.data);\n    } catch (error) {\n      showError(error.message);\n    }\n  };\n\n  const fetchModels = async () => {\n    try {\n      let res = await API.get(`/api/channel/models`);\n      const { data } = res.data;\n      data.forEach((item) => {\n        if (!item.owned_by) {\n          item.owned_by = '未知';\n        }\n      });\n      // 先对data排序\n      data.sort((a, b) => {\n        const ownedByComparison = a.owned_by.localeCompare(b.owned_by);\n        if (ownedByComparison === 0) {\n          return a.id.localeCompare(b.id);\n        }\n        return ownedByComparison;\n      });\n\n      setModelOptions(\n        data.map((model) => {\n          return {\n            id: model.id,\n            group: model.owned_by\n          };\n        })\n      );\n    } catch (error) {\n      showError(error.message);\n    }\n  };\n\n  const submit = async (values, { setErrors, setStatus, setSubmitting }) => {\n    setSubmitting(true);\n    if (values.base_url && values.base_url.endsWith('/')) {\n      values.base_url = values.base_url.slice(0, values.base_url.length - 1);\n    }\n    if (values.type === 3 && values.other === '') {\n      values.other = '2023-09-01-preview';\n    }\n    if (values.type === 18 && values.other === '') {\n      values.other = 'v2.1';\n    }\n    if (values.key === '') {\n      if (values.config.ak && values.config.sk && values.config.region) {\n        values.key = `${values.config.ak}|${values.config.sk}|${values.config.region}`;\n      } else if (values.config.region && values.config.vertex_ai_project_id && values.config.vertex_ai_adc) {\n        values.key = `${values.config.region}|${values.config.vertex_ai_project_id}|${values.config.vertex_ai_adc}`;\n      }\n    }\n\n    let res;\n    const modelsStr = values.models.map((model) => model.id).join(',');\n    const configStr = JSON.stringify(values.config);\n    values.group = values.groups.join(',');\n    if (channelId) {\n      res = await API.put(`/api/channel/`, {\n        ...values,\n        id: parseInt(channelId),\n        models: modelsStr,\n        config: configStr\n      });\n    } else {\n      res = await API.post(`/api/channel/`, { ...values, models: modelsStr, config: configStr });\n    }\n    const { success, message } = res.data;\n    if (success) {\n      if (channelId) {\n        showSuccess('渠道更新成功！');\n      } else {\n        showSuccess('渠道创建成功！');\n      }\n      setSubmitting(false);\n      setStatus({ success: true });\n      onOk(true);\n    } else {\n      setStatus({ success: false });\n      showError(message);\n      setErrors({ submit: message });\n    }\n  };\n\n  function initialModel(channelModel) {\n    if (!channelModel) {\n      return [];\n    }\n\n    // 如果 channelModel 是一个字符串\n    if (typeof channelModel === 'string') {\n      channelModel = channelModel.split(',');\n    }\n    let modelList = channelModel.map((model) => {\n      const modelOption = modelOptions.find((option) => option.id === model);\n      if (modelOption) {\n        return modelOption;\n      }\n      return { id: model, group: '自定义：点击或回车输入' };\n    });\n    return modelList;\n  }\n\n  const loadChannel = async () => {\n    let res = await API.get(`/api/channel/${channelId}`);\n    const { success, message, data } = res.data;\n    if (success) {\n      if (data.models === '') {\n        data.models = [];\n      } else {\n        data.models = initialModel(data.models);\n      }\n      if (data.group === '') {\n        data.groups = [];\n      } else {\n        data.groups = data.group.split(',');\n      }\n      if (data.model_mapping !== '') {\n        data.model_mapping = JSON.stringify(JSON.parse(data.model_mapping), null, 2);\n      }\n      if (data.config !== '') {\n        data.config = JSON.parse(data.config);\n      }\n\n      data.base_url = data.base_url ?? '';\n      data.is_edit = true;\n      initChannel(data.type);\n      setInitialInput(data);\n    } else {\n      showError(message);\n    }\n  };\n\n  useEffect(() => {\n    fetchGroups().then();\n    fetchModels().then();\n  }, []);\n\n  useEffect(() => {\n    setBatchAdd(false);\n    if (channelId) {\n      loadChannel().then();\n    } else {\n      initChannel(1);\n      setInitialInput({ ...defaultConfig.input, is_edit: false });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [channelId]);\n\n  return (\n    <Dialog open={open} onClose={onCancel} fullWidth maxWidth={'md'}>\n      <DialogTitle\n        sx={{\n          margin: '0px',\n          fontWeight: 700,\n          lineHeight: '1.55556',\n          padding: '24px',\n          fontSize: '1.125rem'\n        }}\n      >\n        {channelId ? '编辑渠道' : '新建渠道'}\n      </DialogTitle>\n      <Divider />\n      <DialogContent>\n        <Formik initialValues={initialInput} enableReinitialize validationSchema={validationSchema} onSubmit={submit}>\n          {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values, setFieldValue }) => (\n            <form noValidate onSubmit={handleSubmit}>\n              <FormControl fullWidth error={Boolean(touched.type && errors.type)} sx={{ ...theme.typography.otherInput }}>\n                <InputLabel htmlFor=\"channel-type-label\">{inputLabel.type}</InputLabel>\n                <Select\n                  id=\"channel-type-label\"\n                  label={inputLabel.type}\n                  value={values.type}\n                  name=\"type\"\n                  onBlur={handleBlur}\n                  onChange={(e) => {\n                    handleChange(e);\n                    handleTypeChange(setFieldValue, e.target.value, values);\n                  }}\n                  MenuProps={{\n                    PaperProps: {\n                      style: {\n                        maxHeight: 200\n                      }\n                    }\n                  }}\n                >\n                  {Object.values(CHANNEL_OPTIONS)\n                    .sort((a, b) => {\n                      return a.text.localeCompare(b.text);\n                    })\n                    .map((option) => {\n                      return (\n                        <MenuItem key={option.value} value={option.value}>\n                          {option.text}\n                        </MenuItem>\n                      );\n                    })}\n                </Select>\n                {touched.type && errors.type ? (\n                  <FormHelperText error id=\"helper-tex-channel-type-label\">\n                    {errors.type}\n                  </FormHelperText>\n                ) : (\n                  <FormHelperText id=\"helper-tex-channel-type-label\"> {inputPrompt.type} </FormHelperText>\n                )}\n              </FormControl>\n\n              <FormControl fullWidth error={Boolean(touched.name && errors.name)} sx={{ ...theme.typography.otherInput }}>\n                <InputLabel htmlFor=\"channel-name-label\">{inputLabel.name}</InputLabel>\n                <OutlinedInput\n                  id=\"channel-name-label\"\n                  label={inputLabel.name}\n                  type=\"text\"\n                  value={values.name}\n                  name=\"name\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  inputProps={{ autoComplete: 'name' }}\n                  aria-describedby=\"helper-text-channel-name-label\"\n                />\n                {touched.name && errors.name ? (\n                  <FormHelperText error id=\"helper-tex-channel-name-label\">\n                    {errors.name}\n                  </FormHelperText>\n                ) : (\n                  <FormHelperText id=\"helper-tex-channel-name-label\"> {inputPrompt.name} </FormHelperText>\n                )}\n              </FormControl>\n\n              <FormControl fullWidth error={Boolean(touched.base_url && errors.base_url)} sx={{ ...theme.typography.otherInput }}>\n                <InputLabel htmlFor=\"channel-base_url-label\">{inputLabel.base_url}</InputLabel>\n                <OutlinedInput\n                  id=\"channel-base_url-label\"\n                  label={inputLabel.base_url}\n                  type=\"text\"\n                  value={values.base_url}\n                  name=\"base_url\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  inputProps={{}}\n                  aria-describedby=\"helper-text-channel-base_url-label\"\n                />\n                {touched.base_url && errors.base_url ? (\n                  <FormHelperText error id=\"helper-tex-channel-base_url-label\">\n                    {errors.base_url}\n                  </FormHelperText>\n                ) : (\n                  <FormHelperText id=\"helper-tex-channel-base_url-label\"> {inputPrompt.base_url} </FormHelperText>\n                )}\n              </FormControl>\n\n              {inputPrompt.other && (\n                <FormControl fullWidth error={Boolean(touched.other && errors.other)} sx={{ ...theme.typography.otherInput }}>\n                  <InputLabel htmlFor=\"channel-other-label\">{inputLabel.other}</InputLabel>\n                  <OutlinedInput\n                    id=\"channel-other-label\"\n                    label={inputLabel.other}\n                    type=\"text\"\n                    value={values.other}\n                    name=\"other\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    inputProps={{}}\n                    aria-describedby=\"helper-text-channel-other-label\"\n                  />\n                  {touched.other && errors.other ? (\n                    <FormHelperText error id=\"helper-tex-channel-other-label\">\n                      {errors.other}\n                    </FormHelperText>\n                  ) : (\n                    <FormHelperText id=\"helper-tex-channel-other-label\"> {inputPrompt.other} </FormHelperText>\n                  )}\n                </FormControl>\n              )}\n\n              <FormControl fullWidth sx={{ ...theme.typography.otherInput }}>\n                <Autocomplete\n                  multiple\n                  id=\"channel-groups-label\"\n                  options={groupOptions}\n                  value={values.groups}\n                  onChange={(e, value) => {\n                    const event = {\n                      target: {\n                        name: 'groups',\n                        value: value\n                      }\n                    };\n                    handleChange(event);\n                  }}\n                  onBlur={handleBlur}\n                  filterSelectedOptions\n                  renderInput={(params) => <TextField {...params} name=\"groups\" error={Boolean(errors.groups)} label={inputLabel.groups} />}\n                  aria-describedby=\"helper-text-channel-groups-label\"\n                />\n                {errors.groups ? (\n                  <FormHelperText error id=\"helper-tex-channel-groups-label\">\n                    {errors.groups}\n                  </FormHelperText>\n                ) : (\n                  <FormHelperText id=\"helper-tex-channel-groups-label\"> {inputPrompt.groups} </FormHelperText>\n                )}\n              </FormControl>\n\n              <FormControl fullWidth sx={{ ...theme.typography.otherInput }}>\n                <Autocomplete\n                  multiple\n                  freeSolo\n                  id=\"channel-models-label\"\n                  options={modelOptions}\n                  value={values.models}\n                  onChange={(e, value) => {\n                    const event = {\n                      target: {\n                        name: 'models',\n                        value: value.map((item) => (typeof item === 'string' ? { id: item, group: '自定义：点击或回车输入' } : item))\n                      }\n                    };\n                    handleChange(event);\n                  }}\n                  onBlur={handleBlur}\n                  // filterSelectedOptions\n                  disableCloseOnSelect\n                  renderInput={(params) => <TextField {...params} name=\"models\" error={Boolean(errors.models)} label={inputLabel.models} />}\n                  groupBy={(option) => option.group}\n                  getOptionLabel={(option) => {\n                    if (typeof option === 'string') {\n                      return option;\n                    }\n                    if (option.inputValue) {\n                      return option.inputValue;\n                    }\n                    return option.id;\n                  }}\n                  filterOptions={(options, params) => {\n                    const filtered = filter(options, params);\n                    const { inputValue } = params;\n                    const isExisting = options.some((option) => inputValue === option.id);\n                    if (inputValue !== '' && !isExisting) {\n                      filtered.push({\n                        id: inputValue,\n                        group: '自定义：点击或回车输入'\n                      });\n                    }\n                    return filtered;\n                  }}\n                  renderOption={(props, option, { selected }) => (\n                    <li {...props}>\n                      <Checkbox icon={icon} checkedIcon={checkedIcon} style={{ marginRight: 8 }} checked={selected} />\n                      {option.id}\n                    </li>\n                  )}\n                />\n                {errors.models ? (\n                  <FormHelperText error id=\"helper-tex-channel-models-label\">\n                    {errors.models}\n                  </FormHelperText>\n                ) : (\n                  <FormHelperText id=\"helper-tex-channel-models-label\"> {inputPrompt.models} </FormHelperText>\n                )}\n              </FormControl>\n              <Container\n                sx={{\n                  textAlign: 'right'\n                }}\n              >\n                <ButtonGroup variant=\"outlined\" aria-label=\"small outlined primary button group\">\n                  <Button\n                    onClick={() => {\n                      setFieldValue('models', initialModel(basicModels));\n                    }}\n                  >\n                    填入相关模型\n                  </Button>\n                  <Button\n                    onClick={() => {\n                      setFieldValue('models', modelOptions);\n                    }}\n                  >\n                    填入所有模型\n                  </Button>\n                </ButtonGroup>\n              </Container>\n              {inputLabel.key && (\n                <>\n                  <FormControl fullWidth error={Boolean(touched.key && errors.key)} sx={{ ...theme.typography.otherInput }}>\n                    {!batchAdd ? (\n                      <>\n                        <InputLabel htmlFor=\"channel-key-label\">{inputLabel.key}</InputLabel>\n                        <OutlinedInput\n                          id=\"channel-key-label\"\n                          label={inputLabel.key}\n                          type=\"text\"\n                          value={values.key}\n                          name=\"key\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          inputProps={{}}\n                          aria-describedby=\"helper-text-channel-key-label\"\n                        />\n                      </>\n                    ) : (\n                      <TextField\n                        multiline\n                        id=\"channel-key-label\"\n                        label={inputLabel.key}\n                        value={values.key}\n                        name=\"key\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        aria-describedby=\"helper-text-channel-key-label\"\n                        minRows={5}\n                        placeholder={inputPrompt.key + '，一行一个密钥'}\n                      />\n                    )}\n\n                    {touched.key && errors.key ? (\n                      <FormHelperText error id=\"helper-tex-channel-key-label\">\n                        {errors.key}\n                      </FormHelperText>\n                    ) : (\n                      <FormHelperText id=\"helper-tex-channel-key-label\"> {inputPrompt.key} </FormHelperText>\n                    )}\n                  </FormControl>\n                  {channelId === 0 && (\n                    <Container\n                      sx={{\n                        textAlign: 'right'\n                      }}\n                    >\n                      <Switch checked={batchAdd} onChange={(e) => setBatchAdd(e.target.checked)} />\n                      批量添加\n                    </Container>\n                  )}\n                </>\n              )}\n\n              {inputLabel.config &&\n                Object.keys(inputLabel.config).map((configName) => {\n                  return (\n                    <FormControl key={'config.' + configName} fullWidth sx={{ ...theme.typography.otherInput }}>\n                      <TextField\n                        multiline\n                        key={'config.' + configName}\n                        name={'config.' + configName}\n                        value={values.config?.[configName] || ''}\n                        label={configName}\n                        placeholder={inputPrompt.config[configName]}\n                        onChange={handleChange}\n                      />\n                      <FormHelperText id={`helper-tex-config.${configName}-label`}> {inputPrompt.config[configName]} </FormHelperText>\n                    </FormControl>\n                  );\n                })}\n\n              <FormControl fullWidth error={Boolean(touched.model_mapping && errors.model_mapping)} sx={{ ...theme.typography.otherInput }}>\n                {/* <InputLabel htmlFor=\"channel-model_mapping-label\">{inputLabel.model_mapping}</InputLabel> */}\n                <TextField\n                  multiline\n                  id=\"channel-model_mapping-label\"\n                  label={inputLabel.model_mapping}\n                  value={values.model_mapping}\n                  name=\"model_mapping\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  aria-describedby=\"helper-text-channel-model_mapping-label\"\n                  minRows={5}\n                  placeholder={inputPrompt.model_mapping}\n                />\n                {touched.model_mapping && errors.model_mapping ? (\n                  <FormHelperText error id=\"helper-tex-channel-model_mapping-label\">\n                    {errors.model_mapping}\n                  </FormHelperText>\n                ) : (\n                  <FormHelperText id=\"helper-tex-channel-model_mapping-label\"> {inputPrompt.model_mapping} </FormHelperText>\n                )}\n              </FormControl>\n              <FormControl fullWidth error={Boolean(touched.system_prompt && errors.system_prompt)} sx={{ ...theme.typography.otherInput }}>\n                {/* <InputLabel htmlFor=\"channel-model_mapping-label\">{inputLabel.model_mapping}</InputLabel> */}\n                <TextField\n                  multiline\n                  id=\"channel-system_prompt-label\"\n                  label={inputLabel.system_prompt}\n                  value={values.system_prompt}\n                  name=\"system_prompt\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  aria-describedby=\"helper-text-channel-system_prompt-label\"\n                  minRows={5}\n                  placeholder={inputPrompt.system_prompt}\n                />\n                {touched.system_prompt && errors.system_prompt ? (\n                  <FormHelperText error id=\"helper-tex-channel-system_prompt-label\">\n                    {errors.system_prompt}\n                  </FormHelperText>\n                ) : (\n                  <FormHelperText id=\"helper-tex-channel-system_prompt-label\"> {inputPrompt.system_prompt} </FormHelperText>\n                )}\n              </FormControl>\n              <DialogActions>\n                <Button onClick={onCancel}>取消</Button>\n                <Button disableElevation disabled={isSubmitting} type=\"submit\" variant=\"contained\" color=\"primary\">\n                  提交\n                </Button>\n              </DialogActions>\n            </form>\n          )}\n        </Formik>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default EditModal;\n\nEditModal.propTypes = {\n  open: PropTypes.bool,\n  channelId: PropTypes.number,\n  onCancel: PropTypes.func,\n  onOk: PropTypes.func\n};\n","import { useState, useEffect } from 'react';\nimport { showError, showSuccess, showInfo, loadChannelModels } from 'utils/common';\n\nimport { useTheme } from '@mui/material/styles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableContainer from '@mui/material/TableContainer';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport TablePagination from '@mui/material/TablePagination';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport Toolbar from '@mui/material/Toolbar';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nimport { Button, IconButton, Card, Box, Stack, Container, Typography, Divider } from '@mui/material';\nimport ChannelTableRow from './component/TableRow';\nimport ChannelTableHead from './component/TableHead';\nimport TableToolBar from 'ui-component/TableToolBar';\nimport { API } from 'utils/api';\nimport { ITEMS_PER_PAGE } from 'constants';\nimport { IconRefresh, IconHttpDelete, IconPlus, IconBrandSpeedtest, IconCoinYuan } from '@tabler/icons-react';\nimport EditeModal from './component/EditModal';\n\n// ----------------------------------------------------------------------\n// CHANNEL_OPTIONS,\nexport default function ChannelPage() {\n  const [channels, setChannels] = useState([]);\n  const [activePage, setActivePage] = useState(0);\n  const [searching, setSearching] = useState(false);\n  const [searchKeyword, setSearchKeyword] = useState('');\n  const theme = useTheme();\n  const matchUpMd = useMediaQuery(theme.breakpoints.up('sm'));\n  const [openModal, setOpenModal] = useState(false);\n  const [editChannelId, setEditChannelId] = useState(0);\n\n  const loadChannels = async (startIdx) => {\n    setSearching(true);\n    const res = await API.get(`/api/channel/?p=${startIdx}`);\n    const { success, message, data } = res.data;\n    if (success) {\n      if (startIdx === 0) {\n        setChannels(data);\n      } else {\n        let newChannels = [...channels];\n        newChannels.splice(startIdx * ITEMS_PER_PAGE, data.length, ...data);\n        setChannels(newChannels);\n      }\n    } else {\n      showError(message);\n    }\n    setSearching(false);\n  };\n\n  const onPaginationChange = (event, activePage) => {\n    (async () => {\n      if (activePage === Math.ceil(channels.length / ITEMS_PER_PAGE)) {\n        // In this case we have to load more data and then append them.\n        await loadChannels(activePage);\n      }\n      setActivePage(activePage);\n    })();\n  };\n\n  const searchChannels = async (event) => {\n    event.preventDefault();\n    if (searchKeyword === '') {\n      await loadChannels(0);\n      setActivePage(0);\n      return;\n    }\n    setSearching(true);\n    const res = await API.get(`/api/channel/search?keyword=${searchKeyword}`);\n    const { success, message, data } = res.data;\n    if (success) {\n      setChannels(data);\n      setActivePage(0);\n    } else {\n      showError(message);\n    }\n    setSearching(false);\n  };\n\n  const handleSearchKeyword = (event) => {\n    setSearchKeyword(event.target.value);\n  };\n\n  const manageChannel = async (id, action, value) => {\n    const url = '/api/channel/';\n    let data = { id };\n    let res;\n    switch (action) {\n      case 'delete':\n        res = await API.delete(url + id);\n        break;\n      case 'status':\n        res = await API.put(url, {\n          ...data,\n          status: value\n        });\n        break;\n      case 'priority':\n        if (value === '') {\n          return;\n        }\n        res = await API.put(url, {\n          ...data,\n          priority: parseInt(value)\n        });\n        break;\n      case 'test':\n        res = await API.get(url + `test/${id}`);\n        break;\n    }\n    const { success, message } = res.data;\n    if (success) {\n      showSuccess('操作成功完成！');\n      if (action === 'delete') {\n        await handleRefresh();\n      }\n    } else {\n      showError(message);\n    }\n\n    return res.data;\n  };\n\n  // 处理刷新\n  const handleRefresh = async () => {\n    await loadChannels(activePage);\n  };\n\n  // 处理测试所有启用渠道\n  const testAllChannels = async () => {\n    const res = await API.get(`/api/channel/test`);\n    const { success, message } = res.data;\n    if (success) {\n      showInfo('已成功开始测试所有渠道，请刷新页面查看结果。');\n    } else {\n      showError(message);\n    }\n  };\n\n  // 处理删除所有禁用渠道\n  const deleteAllDisabledChannels = async () => {\n    const res = await API.delete(`/api/channel/disabled`);\n    const { success, message, data } = res.data;\n    if (success) {\n      showSuccess(`已删除所有禁用渠道，共计 ${data} 个`);\n      await handleRefresh();\n    } else {\n      showError(message);\n    }\n  };\n\n  // 处理更新所有启用渠道余额\n  const updateAllChannelsBalance = async () => {\n    setSearching(true);\n    const res = await API.get(`/api/channel/update_balance`);\n    const { success, message } = res.data;\n    if (success) {\n      showInfo('已更新完毕所有已启用渠道余额！');\n    } else {\n      showError(message);\n    }\n    setSearching(false);\n  };\n\n  const handleOpenModal = (channelId) => {\n    setEditChannelId(channelId);\n    setOpenModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setOpenModal(false);\n    setEditChannelId(0);\n  };\n\n  const handleOkModal = (status) => {\n    if (status === true) {\n      handleCloseModal();\n      handleRefresh();\n    }\n  };\n\n  useEffect(() => {\n    loadChannels(0)\n      .then()\n      .catch((reason) => {\n        showError(reason);\n      });\n    loadChannelModels().then();\n  }, []);\n\n  return (\n    <>\n      <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={2.5}>\n        <Typography variant=\"h4\">渠道</Typography>\n        <Button variant=\"contained\" color=\"primary\" startIcon={<IconPlus />} onClick={() => handleOpenModal(0)}>\n          新建渠道\n        </Button>\n      </Stack>\n      <Card>\n        <Box component=\"form\" onSubmit={searchChannels} noValidate sx={{ marginTop: 2 }}>\n          <TableToolBar filterName={searchKeyword} handleFilterName={handleSearchKeyword} placeholder={'搜索渠道的 ID，名称和密钥 ...'} />\n        </Box>\n        <Toolbar\n          sx={{\n            textAlign: 'right',\n            height: 50,\n            display: 'flex',\n            justifyContent: 'space-between',\n            p: (theme) => theme.spacing(0, 1, 0, 3)\n          }}\n        >\n          <Container>\n            {matchUpMd ? (\n              <ButtonGroup variant=\"outlined\" aria-label=\"outlined small primary button group\" sx={{ marginBottom: 2 }}>\n                <Button onClick={handleRefresh} startIcon={<IconRefresh width={'18px'} />}>\n                  刷新\n                </Button>\n                <Button onClick={testAllChannels} startIcon={<IconBrandSpeedtest width={'18px'} />}>\n                  测试启用渠道\n                </Button>\n                {/*<Button onClick={updateAllChannelsBalance} startIcon={<IconCoinYuan width={'18px'} />}>*/}\n                {/*  更新启用余额*/}\n                {/*</Button>*/}\n                <Button onClick={deleteAllDisabledChannels} startIcon={<IconHttpDelete width={'18px'} />}>\n                  删除禁用渠道\n                </Button>\n              </ButtonGroup>\n            ) : (\n              <Stack\n                direction=\"row\"\n                spacing={1}\n                divider={<Divider orientation=\"vertical\" flexItem />}\n                justifyContent=\"space-around\"\n                alignItems=\"center\"\n              >\n                <IconButton onClick={handleRefresh} size=\"large\">\n                  <IconRefresh />\n                </IconButton>\n                <IconButton onClick={testAllChannels} size=\"large\">\n                  <IconBrandSpeedtest />\n                </IconButton>\n                <IconButton onClick={updateAllChannelsBalance} size=\"large\">\n                  <IconCoinYuan />\n                </IconButton>\n                <IconButton onClick={deleteAllDisabledChannels} size=\"large\">\n                  <IconHttpDelete />\n                </IconButton>\n              </Stack>\n            )}\n          </Container>\n        </Toolbar>\n        {searching && <LinearProgress />}\n        <PerfectScrollbar component=\"div\">\n          <TableContainer sx={{ overflow: 'unset' }}>\n            <Table sx={{ minWidth: 800 }}>\n              <ChannelTableHead />\n              <TableBody>\n                {channels.slice(activePage * ITEMS_PER_PAGE, (activePage + 1) * ITEMS_PER_PAGE).map((row) => (\n                  <ChannelTableRow\n                    item={row}\n                    manageChannel={manageChannel}\n                    key={row.id}\n                    handleOpenModal={handleOpenModal}\n                    setModalChannelId={setEditChannelId}\n                  />\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </PerfectScrollbar>\n        <TablePagination\n          page={activePage}\n          component=\"div\"\n          count={channels.length + (channels.length % ITEMS_PER_PAGE === 0 ? 1 : 0)}\n          rowsPerPage={ITEMS_PER_PAGE}\n          onPageChange={onPaginationChange}\n          rowsPerPageOptions={[ITEMS_PER_PAGE]}\n        />\n      </Card>\n      <EditeModal open={openModal} onCancel={handleCloseModal} onOk={handleOkModal} channelId={editChannelId} />\n    </>\n  );\n}\n","/*\n * Label.js\n *\n * This file uses code from the Minimal UI project, available at\n * https://github.com/minimal-ui-kit/material-kit-react/blob/main/src/components/label/label.jsx\n *\n * Minimal UI is licensed under the MIT License. A copy of the license is included below:\n *\n * MIT License\n *\n * Copyright (c) 2021 Minimal UI (https://minimals.cc/)\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nimport PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\n\nimport Box from '@mui/material/Box';\nimport { useTheme } from '@mui/material/styles';\nimport { alpha, styled } from '@mui/material/styles';\n\n// ----------------------------------------------------------------------\n\nconst Label = forwardRef(({ children, color = 'default', variant = 'soft', startIcon, endIcon, sx, ...other }, ref) => {\n  const theme = useTheme();\n\n  const iconStyles = {\n    width: 16,\n    height: 16,\n    '& svg, img': { width: 1, height: 1, objectFit: 'cover' }\n  };\n\n  return (\n    <StyledLabel\n      ref={ref}\n      component=\"span\"\n      ownerState={{ color, variant }}\n      sx={{\n        ...(startIcon && { pl: 0.75 }),\n        ...(endIcon && { pr: 0.75 }),\n        ...sx\n      }}\n      theme={theme}\n      {...other}\n    >\n      {startIcon && <Box sx={{ mr: 0.75, ...iconStyles }}> {startIcon} </Box>}\n\n      {children}\n\n      {endIcon && <Box sx={{ ml: 0.75, ...iconStyles }}> {endIcon} </Box>}\n    </StyledLabel>\n  );\n});\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  endIcon: PropTypes.object,\n  startIcon: PropTypes.object,\n  sx: PropTypes.object,\n  variant: PropTypes.oneOf(['filled', 'outlined', 'ghost', 'soft']),\n  color: PropTypes.oneOf(['default', 'primary', 'secondary', 'info', 'success', 'warning', 'orange', 'error'])\n};\n\nexport default Label;\n\nconst StyledLabel = styled(Box)(({ theme, ownerState }) => {\n  // const lightMode = theme.palette.mode === 'light';\n\n  const filledVariant = ownerState.variant === 'filled';\n\n  const outlinedVariant = ownerState.variant === 'outlined';\n\n  const softVariant = ownerState.variant === 'soft';\n\n  const ghostVariant = ownerState.variant === 'ghost';\n\n  const defaultStyle = {\n    ...(ownerState.color === 'default' && {\n      // FILLED\n      ...(filledVariant && {\n        color: theme.palette.grey[300],\n        backgroundColor: theme.palette.text.primary\n      }),\n      // OUTLINED\n      ...(outlinedVariant && {\n        color: theme.palette.grey[500],\n        border: `2px solid ${theme.palette.grey[500]}`\n      }),\n      // SOFT\n      ...(softVariant && {\n        color: theme.palette.text.secondary,\n        backgroundColor: alpha(theme.palette.grey[500], 0.16)\n      })\n    })\n  };\n\n  const colorStyle = {\n    ...(ownerState.color !== 'default' && {\n      // FILLED\n      ...(filledVariant && {\n        color: theme.palette.background.paper,\n        backgroundColor: theme.palette[ownerState.color]?.main\n      }),\n      // OUTLINED\n      ...(outlinedVariant && {\n        backgroundColor: 'transparent',\n        color: theme.palette[ownerState.color]?.main,\n        border: `2px solid ${theme.palette[ownerState.color]?.main}`\n      }),\n      // SOFT\n      ...(softVariant && {\n        color: theme.palette[ownerState.color]['dark'],\n        backgroundColor: alpha(theme.palette[ownerState.color]?.main, 0.16)\n      }),\n      // GHOST\n      ...(ghostVariant && {\n        color: theme.palette[ownerState.color]?.main\n      })\n    })\n  };\n\n  return {\n    height: 24,\n    minWidth: 24,\n    lineHeight: 0,\n    borderRadius: 6,\n    cursor: 'default',\n    alignItems: 'center',\n    whiteSpace: 'nowrap',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    // textTransform: 'capitalize',\n    padding: theme.spacing(0, 0.75),\n    fontSize: theme.typography.pxToRem(12),\n    fontWeight: theme.typography.fontWeightBold,\n    transition: theme.transitions.create('all', {\n      duration: theme.transitions.duration.shorter\n    }),\n    ...defaultStyle,\n    ...colorStyle\n  };\n});\n","export const ITEMS_PER_PAGE = 10; // this value must keep same as the one defined in backend!\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 5v14H5V5zm0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2\"\n}), 'CheckBoxOutlineBlank');","import PropTypes from 'prop-types';\n\nimport Toolbar from '@mui/material/Toolbar';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputAdornment from '@mui/material/InputAdornment';\n\nimport { useTheme } from '@mui/material/styles';\nimport { IconSearch } from '@tabler/icons-react';\n\n// ----------------------------------------------------------------------\n\nexport default function TableToolBar({ filterName, handleFilterName, placeholder }) {\n  const theme = useTheme();\n  const grey500 = theme.palette.grey[500];\n\n  return (\n    <Toolbar\n      sx={{\n        height: 80,\n        display: 'flex',\n        justifyContent: 'space-between',\n        p: (theme) => theme.spacing(0, 1, 0, 3)\n      }}\n    >\n      <OutlinedInput\n        id=\"keyword\"\n        sx={{\n          minWidth: '100%'\n        }}\n        value={filterName}\n        onChange={handleFilterName}\n        placeholder={placeholder}\n        startAdornment={\n          <InputAdornment position=\"start\">\n            <IconSearch stroke={1.5} size=\"20px\" color={grey500} />\n          </InputAdornment>\n        }\n      />\n    </Toolbar>\n  );\n}\n\nTableToolBar.propTypes = {\n  filterName: PropTypes.string,\n  handleFilterName: PropTypes.func,\n  placeholder: PropTypes.string\n};\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2m-9 14-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8z\"\n}), 'CheckBox');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTextFieldUtilityClass(slot) {\n  return generateUtilityClass('MuiTextField', slot);\n}\nconst textFieldClasses = generateUtilityClasses('MuiTextField', ['root']);\nexport default textFieldClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"autoComplete\", \"autoFocus\", \"children\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"error\", \"FormHelperTextProps\", \"fullWidth\", \"helperText\", \"id\", \"InputLabelProps\", \"inputProps\", \"InputProps\", \"inputRef\", \"label\", \"maxRows\", \"minRows\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"placeholder\", \"required\", \"rows\", \"select\", \"SelectProps\", \"type\", \"value\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useId from '@mui/utils/useId';\nimport refType from '@mui/utils/refType';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Input from '../Input';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nimport InputLabel from '../InputLabel';\nimport FormControl from '../FormControl';\nimport FormHelperText from '../FormHelperText';\nimport Select from '../Select';\nimport { getTextFieldUtilityClass } from './textFieldClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst variantComponent = {\n  standard: Input,\n  filled: FilledInput,\n  outlined: OutlinedInput\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTextFieldUtilityClass, classes);\n};\nconst TextFieldRoot = styled(FormControl, {\n  name: 'MuiTextField',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\n\n/**\n * The `TextField` is a convenience wrapper for the most common cases (80%).\n * It cannot be all things to all people, otherwise the API would grow out of control.\n *\n * ## Advanced Configuration\n *\n * It's important to understand that the text field is a simple abstraction\n * on top of the following components:\n *\n * - [FormControl](/material-ui/api/form-control/)\n * - [InputLabel](/material-ui/api/input-label/)\n * - [FilledInput](/material-ui/api/filled-input/)\n * - [OutlinedInput](/material-ui/api/outlined-input/)\n * - [Input](/material-ui/api/input/)\n * - [FormHelperText](/material-ui/api/form-helper-text/)\n *\n * If you wish to alter the props applied to the `input` element, you can do so as follows:\n *\n * ```jsx\n * const inputProps = {\n *   step: 300,\n * };\n *\n * return <TextField id=\"time\" type=\"time\" inputProps={inputProps} />;\n * ```\n *\n * For advanced cases, please look at the source of TextField by clicking on the\n * \"Edit this page\" button above. Consider either:\n *\n * - using the upper case props for passing values directly to the components\n * - using the underlying components directly as shown in the demos\n */\nconst TextField = /*#__PURE__*/React.forwardRef(function TextField(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTextField'\n  });\n  const {\n      autoComplete,\n      autoFocus = false,\n      children,\n      className,\n      color = 'primary',\n      defaultValue,\n      disabled = false,\n      error = false,\n      FormHelperTextProps,\n      fullWidth = false,\n      helperText,\n      id: idOverride,\n      InputLabelProps,\n      inputProps,\n      InputProps,\n      inputRef,\n      label,\n      maxRows,\n      minRows,\n      multiline = false,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      placeholder,\n      required = false,\n      rows,\n      select = false,\n      SelectProps,\n      type,\n      value,\n      variant = 'outlined'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    autoFocus,\n    color,\n    disabled,\n    error,\n    fullWidth,\n    multiline,\n    required,\n    select,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (process.env.NODE_ENV !== 'production') {\n    if (select && !children) {\n      console.error('MUI: `children` must be passed when using the `TextField` component with `select`.');\n    }\n  }\n  const InputMore = {};\n  if (variant === 'outlined') {\n    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {\n      InputMore.notched = InputLabelProps.shrink;\n    }\n    InputMore.label = label;\n  }\n  if (select) {\n    // unset defaults from textbox inputs\n    if (!SelectProps || !SelectProps.native) {\n      InputMore.id = undefined;\n    }\n    InputMore['aria-describedby'] = undefined;\n  }\n  const id = useId(idOverride);\n  const helperTextId = helperText && id ? `${id}-helper-text` : undefined;\n  const inputLabelId = label && id ? `${id}-label` : undefined;\n  const InputComponent = variantComponent[variant];\n  const InputElement = /*#__PURE__*/_jsx(InputComponent, _extends({\n    \"aria-describedby\": helperTextId,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    fullWidth: fullWidth,\n    multiline: multiline,\n    name: name,\n    rows: rows,\n    maxRows: maxRows,\n    minRows: minRows,\n    type: type,\n    value: value,\n    id: id,\n    inputRef: inputRef,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    inputProps: inputProps\n  }, InputMore, InputProps));\n  return /*#__PURE__*/_jsxs(TextFieldRoot, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    error: error,\n    fullWidth: fullWidth,\n    ref: ref,\n    required: required,\n    color: color,\n    variant: variant,\n    ownerState: ownerState\n  }, other, {\n    children: [label != null && label !== '' && /*#__PURE__*/_jsx(InputLabel, _extends({\n      htmlFor: id,\n      id: inputLabelId\n    }, InputLabelProps, {\n      children: label\n    })), select ? /*#__PURE__*/_jsx(Select, _extends({\n      \"aria-describedby\": helperTextId,\n      id: id,\n      labelId: inputLabelId,\n      value: value,\n      input: InputElement\n    }, SelectProps, {\n      children: children\n    })) : InputElement, helperText && /*#__PURE__*/_jsx(FormHelperText, _extends({\n      id: helperTextId\n    }, FormHelperTextProps, {\n      children: helperText\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextField.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  error: PropTypes.bool,\n  /**\n   * Props applied to the [`FormHelperText`](/material-ui/api/form-helper-text/) element.\n   */\n  FormHelperTextProps: PropTypes.object,\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * The helper text content.\n   */\n  helperText: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   * Use this prop to make `label` and `helperText` accessible for screen readers.\n   */\n  id: PropTypes.string,\n  /**\n   * Props applied to the [`InputLabel`](/material-ui/api/input-label/) element.\n   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.\n   */\n  InputLabelProps: PropTypes.object,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Props applied to the Input element.\n   * It will be a [`FilledInput`](/material-ui/api/filled-input/),\n   * [`OutlinedInput`](/material-ui/api/outlined-input/) or [`Input`](/material-ui/api/input/)\n   * component depending on the `variant` prop value.\n   */\n  InputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   * @default 'none'\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Minimum number of rows to display when multiline option is set to true.\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * If `true`, a `textarea` element is rendered instead of an input.\n   * @default false\n   */\n  multiline: PropTypes.bool,\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The short hint displayed in the `input` before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n  /**\n   * If `true`, the label is displayed as required and the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Render a [`Select`](/material-ui/api/select/) element while passing the Input element to `Select` as `input` parameter.\n   * If this option is set you must pass the options of the select as children.\n   * @default false\n   */\n  select: PropTypes.bool,\n  /**\n   * Props applied to the [`Select`](/material-ui/api/select/) element.\n   */\n  SelectProps: PropTypes.object,\n  /**\n   * The size of the component.\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any,\n  /**\n   * The variant to use.\n   * @default 'outlined'\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default TextField;","export const CHANNEL_OPTIONS = {\n  1: {\n    key: 1,\n    text: 'OpenAI',\n    value: 1,\n    color: 'success'\n  },\n  14: {\n    key: 14,\n    text: 'Anthropic Claude',\n    value: 14,\n    color: 'primary'\n  },\n  33: {\n    key: 33,\n    text: 'AWS',\n    value: 33,\n    color: 'primary'\n  },\n  37: {\n    key: 37,\n    text: 'Cloudflare',\n    value: 37,\n    color: 'success'\n  },\n  3: {\n    key: 3,\n    text: 'Azure OpenAI',\n    value: 3,\n    color: 'success'\n  },\n  11: {\n    key: 11,\n    text: 'Google PaLM2',\n    value: 11,\n    color: 'warning'\n  },\n  24: {\n    key: 24,\n    text: 'Google Gemini',\n    value: 24,\n    color: 'warning'\n  },\n  28: {\n    key: 28,\n    text: 'Mistral AI',\n    value: 28,\n    color: 'warning'\n  },\n  40: {\n    key: 40,\n    text: '字节火山引擎',\n    value: 40,\n    color: 'primary'\n  },\n  15: {\n    key: 15,\n    text: '百度文心千帆',\n    value: 15,\n    color: 'primary'\n  },\n  17: {\n    key: 17,\n    text: '阿里通义千问',\n    value: 17,\n    color: 'primary'\n  },\n  18: {\n    key: 18,\n    text: '讯飞星火认知',\n    value: 18,\n    color: 'primary'\n  },\n  16: {\n    key: 16,\n    text: '智谱 ChatGLM',\n    value: 16,\n    color: 'primary'\n  },\n  19: {\n    key: 19,\n    text: '360 智脑',\n    value: 19,\n    color: 'primary'\n  },\n  25: {\n    key: 25,\n    text: 'Moonshot AI',\n    value: 25,\n    color: 'primary'\n  },\n  23: {\n    key: 23,\n    text: '腾讯混元',\n    value: 23,\n    color: 'primary'\n  },\n  26: {\n    key: 26,\n    text: '百川大模型',\n    value: 26,\n    color: 'primary'\n  },\n  27: {\n    key: 27,\n    text: 'MiniMax',\n    value: 27,\n    color: 'primary'\n  },\n  29: {\n    key: 29,\n    text: 'Groq',\n    value: 29,\n    color: 'primary'\n  },\n  30: {\n    key: 30,\n    text: 'Ollama',\n    value: 30,\n    color: 'primary'\n  },\n  31: {\n    key: 31,\n    text: '零一万物',\n    value: 31,\n    color: 'primary'\n  },\n  32: {\n    key: 32,\n    text: '阶跃星辰',\n    value: 32,\n    color: 'primary'\n  },\n  34: {\n    key: 34,\n    text: 'Coze',\n    value: 34,\n    color: 'primary'\n  },\n  35: {\n    key: 35,\n    text: 'Cohere',\n    value: 35,\n    color: 'primary'\n  },\n  36: {\n    key: 36,\n    text: 'DeepSeek',\n    value: 36,\n    color: 'primary'\n  },\n  38: {\n    key: 38,\n    text: 'DeepL',\n    value: 38,\n    color: 'primary'\n  },\n  39: {\n    key: 39,\n    text: 'together.ai',\n    value: 39,\n    color: 'primary'\n  },\n  42: {\n    key: 42,\n    text: 'VertexAI',\n    value: 42,\n    color: 'primary'\n  },\n  43: {\n    key: 43,\n    text: 'Proxy',\n    value: 43,\n    color: 'primary'\n  },\n  44: {\n    key: 44,\n    text: 'SiliconFlow',\n    value: 44,\n    color: 'primary'\n  },\n  45: {\n    key: 45,\n    text: 'xAI',\n    value: 45,\n    color: 'primary'\n  },\n  45: {\n    key: 46,\n    text: 'Replicate',\n    value: 46,\n    color: 'primary'\n  },\n  41: {\n    key: 41,\n    text: 'Novita',\n    value: 41,\n    color: 'purple'\n  },\n  8: {\n    key: 8,\n    text: '自定义渠道',\n    value: 8,\n    color: 'error'\n  },\n  22: {\n    key: 22,\n    text: '知识库：FastGPT',\n    value: 22,\n    color: 'success'\n  },\n  21: {\n    key: 21,\n    text: '知识库：AI Proxy',\n    value: 21,\n    color: 'success'\n  },\n  20: {\n    key: 20,\n      text: 'OpenRouter',\n    value: 20,\n    color: 'success'\n  },\n  2: {\n    key: 2,\n    text: '代理：API2D',\n    value: 2,\n    color: 'success'\n  },\n  5: {\n    key: 5,\n    text: '代理：OpenAI-SB',\n    value: 5,\n    color: 'success'\n  },\n  7: {\n    key: 7,\n    text: '代理：OhMyGPT',\n    value: 7,\n    color: 'success'\n  },\n  10: {\n    key: 10,\n    text: '代理：AI Proxy',\n    value: 10,\n    color: 'success'\n  },\n  4: {\n    key: 4,\n    text: '代理：CloseAI',\n    value: 4,\n    color: 'success'\n  },\n  6: {\n    key: 6,\n    text: '代理：OpenAI Max',\n    value: 6,\n    color: 'success'\n  },\n  9: {\n    key: 9,\n    text: '代理：AI.LS',\n    value: 9,\n    color: 'success'\n  },\n  12: {\n    key: 12,\n    text: '代理：API2GPT',\n    value: 12,\n    color: 'success'\n  },\n  13: {\n    key: 13,\n    text: '代理：AIGC2D',\n    value: 13,\n    color: 'success'\n  }\n};\n","import { styled } from '@mui/material/styles';\nimport Switch from '@mui/material/Switch';\n\nconst TableSwitch = styled(Switch)(({ theme }) => ({\n  padding: 8,\n  '& .MuiSwitch-track': {\n    borderRadius: 22 / 2,\n    '&:before, &:after': {\n      content: '\"\"',\n      position: 'absolute',\n      top: '50%',\n      transform: 'translateY(-50%)',\n      width: 16,\n      height: 16\n    },\n    '&:before': {\n      backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\n        theme.palette.getContrastText(theme.palette.primary.main)\n      )}\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"/></svg>')`,\n      left: 12\n    },\n    '&:after': {\n      backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\n        theme.palette.getContrastText(theme.palette.primary.main)\n      )}\" d=\"M19,13H5V11H19V13Z\" /></svg>')`,\n      right: 12\n    }\n  },\n  '& .MuiSwitch-thumb': {\n    boxShadow: 'none',\n    width: 16,\n    height: 16,\n    margin: 2\n  }\n}));\n\nexport default TableSwitch;\n"],"names":["ResponseTimeLabel","test_time","response_time","handle_action","color","time","toFixed","title","_jsxs","_Fragment","children","_jsx","timestamp2string","Tooltip","placement","onClick","Label","name2color","name","GroupLabel","group","groups","split","sort","Stack","divider","Divider","orientation","flexItem","spacing","map","index","TooltipContainer","styled","Container","maxHeight","overflow","width","NameLabel","models","modelMap","item","variant","copy","ChannelTableRow","manageChannel","handleOpenModal","setModalChannelId","open","setOpen","useState","openDelete","setOpenDelete","statusSwitch","setStatusSwitch","status","priorityValve","setPriority","priority","responseTimeData","setResponseTimeData","itemBalance","setItemBalance","balance","handleDeleteClose","handleCloseMenu","TableRow","tabIndex","id","TableCell","CHANNEL_OPTIONS","type","text","TableSwitch","checked","onChange","async","switchVlue","success","Date","now","showInfo","renderNumber","used_quota","res","API","get","message","data","showError","renderBalance","TextField","onBlur","currentValue","parseInt","event","target","value","isNaN","label","defaultValue","inputProps","min","sx","IconButton","currentTarget","IconDotsVertical","Popover","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","MenuItem","IconEdit","style","marginRight","handleDeleteOpen","IconTrash","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus","ChannelTableHead","TableHead","IconBrandSpeedtest","createReactComponent","d","key","IconHttpDelete","IconCoinYuan","defaultConfig","base_url","other","model_mapping","config","system_prompt","typeConfig","inputLabel","prompt","input","modelGroup","region","ak","sk","user_id","vertex_ai_project_id","vertex_ai_adc","icon","CheckBoxOutlineBlankIcon","fontSize","checkedIcon","CheckBoxIcon","filter","createFilterOptions","validationSchema","Yup","shape","is_edit","required","when","is","then","includes","otherwise","test","undefined","JSON","parse","e","EditModal","channelId","onCancel","onOk","theme","useTheme","initialInput","setInitialInput","setInputLabel","inputPrompt","setInputPrompt","groupOptions","setGroupOptions","modelOptions","setModelOptions","batchAdd","setBatchAdd","basicModels","setBasicModels","initChannel","typeValue","_typeConfig$typeValue","_typeConfig$typeValue2","_typeConfig$typeValue3","initialModel","channelModel","model","modelOption","find","option","useEffect","error","fetchGroups","forEach","owned_by","a","b","ownedByComparison","localeCompare","fetchModels","_data$base_url","stringify","loadChannel","fullWidth","maxWidth","margin","fontWeight","lineHeight","padding","Formik","initialValues","enableReinitialize","onSubmit","values","setErrors","setStatus","setSubmitting","endsWith","slice","length","modelsStr","join","configStr","put","post","showSuccess","submit","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","setFieldValue","noValidate","FormControl","Boolean","typography","otherInput","InputLabel","htmlFor","Select","handleTypeChange","localModels","getChannelModels","Array","isArray","MenuProps","Object","FormHelperText","OutlinedInput","autoComplete","Autocomplete","multiple","options","filterSelectedOptions","renderInput","params","freeSolo","disableCloseOnSelect","groupBy","getOptionLabel","inputValue","filterOptions","filtered","isExisting","some","push","renderOption","props","selected","Checkbox","textAlign","ButtonGroup","multiline","minRows","placeholder","Switch","keys","configName","_values$config","disableElevation","disabled","ChannelPage","channels","setChannels","activePage","setActivePage","searching","setSearching","searchKeyword","setSearchKeyword","matchUpMd","useMediaQuery","breakpoints","up","openModal","setOpenModal","editChannelId","setEditChannelId","loadChannels","startIdx","newChannels","splice","ITEMS_PER_PAGE","action","url","delete","handleRefresh","testAllChannels","deleteAllDisabledChannels","handleCloseModal","catch","reason","loadChannelModels","direction","alignItems","justifyContent","mb","Typography","startIcon","IconPlus","Card","Box","component","preventDefault","marginTop","TableToolBar","filterName","handleFilterName","Toolbar","height","display","p","marginBottom","IconRefresh","size","LinearProgress","PerfectScrollbar","TableContainer","Table","minWidth","TableBody","row","TablePagination","page","count","rowsPerPage","onPageChange","onPaginationChange","Math","ceil","rowsPerPageOptions","EditeModal","forwardRef","endIcon","ref","iconStyles","objectFit","StyledLabel","ownerState","pl","pr","mr","ml","_theme$palette$ownerS","_theme$palette$ownerS2","_theme$palette$ownerS3","_theme$palette$ownerS4","_theme$palette$ownerS5","filledVariant","outlinedVariant","softVariant","ghostVariant","defaultStyle","palette","grey","backgroundColor","primary","border","secondary","alpha","colorStyle","background","paper","main","borderRadius","cursor","whiteSpace","pxToRem","fontWeightBold","transition","transitions","create","duration","shorter","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","grey500","startAdornment","InputAdornment","position","IconSearch","stroke","getTextFieldUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","variantComponent","standard","Input","filled","FilledInput","outlined","TextFieldRoot","overridesResolver","styles","root","React","inProps","useDefaultProps","className","FormHelperTextProps","helperText","idOverride","InputLabelProps","InputProps","inputRef","maxRows","onFocus","rows","select","SelectProps","_objectWithoutPropertiesLoose","_extends","classes","composeClasses","useUtilityClasses","InputMore","shrink","notched","native","useId","helperTextId","inputLabelId","InputComponent","InputElement","clsx","labelId","content","top","transform","backgroundImage","encodeURIComponent","getContrastText","left","right","boxShadow"],"sourceRoot":""}