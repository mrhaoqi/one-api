{"version":3,"file":"static/js/814.a5b449a3.chunk.js","mappings":"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","sources":["ui-component/cards/SubCard.js","views/Setting/component/OperationSetting.js","views/Setting/component/SystemSetting.js","views/Setting/component/OtherSetting.js","views/Setting/index.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@mui/material';\n\n// ==============================|| CUSTOM SUB CARD ||============================== //\n\nconst SubCard = forwardRef(\n  ({ children, content, contentClass, darkTitle, secondary, sx = {}, contentSX = {}, title, subTitle, ...others }, ref) => {\n    const theme = useTheme();\n\n    return (\n      <Card\n        ref={ref}\n        sx={{\n          border: theme.typography.SubCard.border,\n          ':hover': {\n            boxShadow: '0 2px 14px 0 rgb(32 40 45 / 8%)'\n          },\n          ...sx\n        }}\n        {...others}\n      >\n        {/* card header and action */}\n        {!darkTitle && title && (\n          <CardHeader sx={{ p: 2.5 }} title={<Typography variant=\"h5\">{title}</Typography>} action={secondary} subheader={subTitle} />\n        )}\n        {darkTitle && title && (\n          <CardHeader sx={{ p: 2.5 }} title={<Typography variant=\"h4\">{title}</Typography>} action={secondary} subheader={subTitle} />\n        )}\n\n        {/* content & header divider */}\n        {title && (\n          <Divider\n            sx={{\n              opacity: 1\n              // borderColor: theme.palette.primary.light\n            }}\n          />\n        )}\n\n        {/* card content */}\n        {content && (\n          <CardContent sx={{ p: 2.5, ...contentSX }} className={contentClass || ''}>\n            {children}\n          </CardContent>\n        )}\n        {!content && children}\n      </Card>\n    );\n  }\n);\n\nSubCard.propTypes = {\n  children: PropTypes.node,\n  content: PropTypes.bool,\n  contentClass: PropTypes.string,\n  darkTitle: PropTypes.bool,\n  secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\n  sx: PropTypes.object,\n  contentSX: PropTypes.object,\n  title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\n  subTitle: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\n};\n\nSubCard.defaultProps = {\n  content: true\n};\n\nexport default SubCard;\n","import { useState, useEffect } from \"react\";\nimport SubCard from \"ui-component/cards/SubCard\";\nimport {\n  Stack,\n  FormControl,\n  InputLabel,\n  OutlinedInput,\n  Checkbox,\n  Button,\n  FormControlLabel,\n  TextField,\n} from \"@mui/material\";\nimport { showSuccess, showError, verifyJSON } from \"utils/common\";\nimport { API } from \"utils/api\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\nimport dayjs from \"dayjs\";\nrequire(\"dayjs/locale/zh-cn\");\n\nconst OperationSetting = () => {\n  let now = new Date();\n  let [inputs, setInputs] = useState({\n    QuotaForNewUser: 0,\n    QuotaForInviter: 0,\n    QuotaForInvitee: 0,\n    QuotaRemindThreshold: 0,\n    PreConsumedQuota: 0,\n    ModelRatio: \"\",\n    CompletionRatio: \"\",\n    GroupRatio: \"\",\n    TopUpLink: \"\",\n    ChatLink: \"\",\n    QuotaPerUnit: 0,\n    AutomaticDisableChannelEnabled: \"\",\n    AutomaticEnableChannelEnabled: \"\",\n    ChannelDisableThreshold: 0,\n    LogConsumeEnabled: \"\",\n    DisplayInCurrencyEnabled: \"\",\n    DisplayTokenStatEnabled: \"\",\n    ApproximateTokenEnabled: \"\",\n    RetryTimes: 0,\n  });\n  const [originInputs, setOriginInputs] = useState({});\n  let [loading, setLoading] = useState(false);\n  let [historyTimestamp, setHistoryTimestamp] = useState(\n    now.getTime() / 1000 - 30 * 24 * 3600\n  ); // a month ago new Date().getTime() / 1000 + 3600\n\n  const getOptions = async () => {\n    const res = await API.get(\"/api/option/\");\n    const { success, message, data } = res.data;\n    if (success) {\n      let newInputs = {};\n      data.forEach((item) => {\n        if (item.key === \"ModelRatio\" || item.key === \"GroupRatio\" || item.key === \"CompletionRatio\") {\n          item.value = JSON.stringify(JSON.parse(item.value), null, 2);\n        }\n        if (item.value === '{}') {\n          item.value = '';\n        }\n        newInputs[item.key] = item.value;\n      });\n      setInputs(newInputs);\n      setOriginInputs(newInputs);\n    } else {\n      showError(message);\n    }\n  };\n\n  useEffect(() => {\n    getOptions().then();\n  }, []);\n\n  const updateOption = async (key, value) => {\n    setLoading(true);\n    if (key.endsWith(\"Enabled\")) {\n      value = inputs[key] === \"true\" ? \"false\" : \"true\";\n    }\n    const res = await API.put(\"/api/option/\", {\n      key,\n      value,\n    });\n    const { success, message } = res.data;\n    if (success) {\n      setInputs((inputs) => ({ ...inputs, [key]: value }));\n    } else {\n      showError(message);\n    }\n    setLoading(false);\n  };\n\n  const handleInputChange = async (event) => {\n    let { name, value } = event.target;\n\n    if (name.endsWith(\"Enabled\")) {\n      await updateOption(name, value);\n      showSuccess(\"设置成功！\");\n    } else {\n      setInputs((inputs) => ({ ...inputs, [name]: value }));\n    }\n  };\n\n  const submitConfig = async (group) => {\n    switch (group) {\n      case \"monitor\":\n        if (\n          originInputs[\"ChannelDisableThreshold\"] !==\n          inputs.ChannelDisableThreshold\n        ) {\n          await updateOption(\n            \"ChannelDisableThreshold\",\n            inputs.ChannelDisableThreshold\n          );\n        }\n        if (\n          originInputs[\"QuotaRemindThreshold\"] !== inputs.QuotaRemindThreshold\n        ) {\n          await updateOption(\n            \"QuotaRemindThreshold\",\n            inputs.QuotaRemindThreshold\n          );\n        }\n        break;\n      case \"ratio\":\n        if (originInputs[\"ModelRatio\"] !== inputs.ModelRatio) {\n          if (!verifyJSON(inputs.ModelRatio)) {\n            showError(\"模型倍率不是合法的 JSON 字符串\");\n            return;\n          }\n          await updateOption(\"ModelRatio\", inputs.ModelRatio);\n        }\n        if (originInputs[\"GroupRatio\"] !== inputs.GroupRatio) {\n          if (!verifyJSON(inputs.GroupRatio)) {\n            showError(\"分组倍率不是合法的 JSON 字符串\");\n            return;\n          }\n          await updateOption(\"GroupRatio\", inputs.GroupRatio);\n        }\n        if (originInputs['CompletionRatio'] !== inputs.CompletionRatio) {\n          if (!verifyJSON(inputs.CompletionRatio)) {\n            showError('补全倍率不是合法的 JSON 字符串');\n            return;\n          }\n          await updateOption('CompletionRatio', inputs.CompletionRatio);\n        }\n        break;\n      case \"quota\":\n        if (originInputs[\"QuotaForNewUser\"] !== inputs.QuotaForNewUser) {\n          await updateOption(\"QuotaForNewUser\", inputs.QuotaForNewUser);\n        }\n        if (originInputs[\"QuotaForInvitee\"] !== inputs.QuotaForInvitee) {\n          await updateOption(\"QuotaForInvitee\", inputs.QuotaForInvitee);\n        }\n        if (originInputs[\"QuotaForInviter\"] !== inputs.QuotaForInviter) {\n          await updateOption(\"QuotaForInviter\", inputs.QuotaForInviter);\n        }\n        if (originInputs[\"PreConsumedQuota\"] !== inputs.PreConsumedQuota) {\n          await updateOption(\"PreConsumedQuota\", inputs.PreConsumedQuota);\n        }\n        break;\n      case \"general\":\n        if (originInputs[\"TopUpLink\"] !== inputs.TopUpLink) {\n          await updateOption(\"TopUpLink\", inputs.TopUpLink);\n        }\n        if (originInputs[\"ChatLink\"] !== inputs.ChatLink) {\n          await updateOption(\"ChatLink\", inputs.ChatLink);\n        }\n        if (originInputs[\"QuotaPerUnit\"] !== inputs.QuotaPerUnit) {\n          await updateOption(\"QuotaPerUnit\", inputs.QuotaPerUnit);\n        }\n        if (originInputs[\"RetryTimes\"] !== inputs.RetryTimes) {\n          await updateOption(\"RetryTimes\", inputs.RetryTimes);\n        }\n        break;\n    }\n\n    showSuccess(\"保存成功！\");\n  };\n\n  const deleteHistoryLogs = async () => {\n    const res = await API.delete(\n      `/api/log/?target_timestamp=${Math.floor(historyTimestamp)}`\n    );\n    const { success, message, data } = res.data;\n    if (success) {\n      showSuccess(`${data} 条日志已清理！`);\n      return;\n    }\n    showError(\"日志清理失败：\" + message);\n  };\n\n  return (\n    <Stack spacing={2}>\n      <SubCard title=\"通用设置\">\n        <Stack justifyContent=\"flex-start\" alignItems=\"flex-start\" spacing={2}>\n          <Stack\n            direction={{ sm: \"column\", md: \"row\" }}\n            spacing={{ xs: 3, sm: 2, md: 4 }}\n          >\n            <FormControl fullWidth>\n              <InputLabel htmlFor=\"TopUpLink\">充值链接</InputLabel>\n              <OutlinedInput\n                id=\"TopUpLink\"\n                name=\"TopUpLink\"\n                value={inputs.TopUpLink}\n                onChange={handleInputChange}\n                label=\"充值链接\"\n                placeholder=\"例如发卡网站的购买链接\"\n                disabled={loading}\n              />\n            </FormControl>\n            <FormControl fullWidth>\n              <InputLabel htmlFor=\"ChatLink\">聊天链接</InputLabel>\n              <OutlinedInput\n                id=\"ChatLink\"\n                name=\"ChatLink\"\n                value={inputs.ChatLink}\n                onChange={handleInputChange}\n                label=\"聊天链接\"\n                placeholder=\"例如 ChatGPT Next Web 的部署地址\"\n                disabled={loading}\n              />\n            </FormControl>\n            <FormControl fullWidth>\n              <InputLabel htmlFor=\"QuotaPerUnit\">单位额度</InputLabel>\n              <OutlinedInput\n                id=\"QuotaPerUnit\"\n                name=\"QuotaPerUnit\"\n                value={inputs.QuotaPerUnit}\n                onChange={handleInputChange}\n                label=\"单位额度\"\n                placeholder=\"一单位货币能兑换的额度\"\n                disabled={loading}\n              />\n            </FormControl>\n            <FormControl fullWidth>\n              <InputLabel htmlFor=\"RetryTimes\">重试次数</InputLabel>\n              <OutlinedInput\n                id=\"RetryTimes\"\n                name=\"RetryTimes\"\n                value={inputs.RetryTimes}\n                onChange={handleInputChange}\n                label=\"重试次数\"\n                placeholder=\"重试次数\"\n                disabled={loading}\n              />\n            </FormControl>\n          </Stack>\n          <Stack\n            direction={{ sm: \"column\", md: \"row\" }}\n            spacing={{ xs: 3, sm: 2, md: 4 }}\n            justifyContent=\"flex-start\"\n            alignItems=\"flex-start\"\n          >\n            <FormControlLabel\n              sx={{ marginLeft: \"0px\" }}\n              label=\"以货币形式显示额度\"\n              control={\n                <Checkbox\n                  checked={inputs.DisplayInCurrencyEnabled === \"true\"}\n                  onChange={handleInputChange}\n                  name=\"DisplayInCurrencyEnabled\"\n                />\n              }\n            />\n\n            <FormControlLabel\n              label=\"Billing 相关 API 显示令牌额度而非用户额度\"\n              control={\n                <Checkbox\n                  checked={inputs.DisplayTokenStatEnabled === \"true\"}\n                  onChange={handleInputChange}\n                  name=\"DisplayTokenStatEnabled\"\n                />\n              }\n            />\n\n            <FormControlLabel\n              label=\"使用近似的方式估算 token 数以减少计算量\"\n              control={\n                <Checkbox\n                  checked={inputs.ApproximateTokenEnabled === \"true\"}\n                  onChange={handleInputChange}\n                  name=\"ApproximateTokenEnabled\"\n                />\n              }\n            />\n          </Stack>\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              submitConfig(\"general\").then();\n            }}\n          >\n            保存通用设置\n          </Button>\n        </Stack>\n      </SubCard>\n      <SubCard title=\"日志设置\">\n        <Stack\n          direction=\"column\"\n          justifyContent=\"flex-start\"\n          alignItems=\"flex-start\"\n          spacing={2}\n        >\n          <FormControlLabel\n            label=\"启用日志消费\"\n            control={\n              <Checkbox\n                checked={inputs.LogConsumeEnabled === \"true\"}\n                onChange={handleInputChange}\n                name=\"LogConsumeEnabled\"\n              />\n            }\n          />\n\n          <FormControl>\n            <LocalizationProvider\n              dateAdapter={AdapterDayjs}\n              adapterLocale={\"zh-cn\"}\n            >\n              <DateTimePicker\n                label=\"日志清理时间\"\n                placeholder=\"日志清理时间\"\n                ampm={false}\n                name=\"historyTimestamp\"\n                value={\n                  historyTimestamp === null\n                    ? null\n                    : dayjs.unix(historyTimestamp)\n                }\n                disabled={loading}\n                onChange={(newValue) => {\n                  setHistoryTimestamp(\n                    newValue === null ? null : newValue.unix()\n                  );\n                }}\n                slotProps={{\n                  actionBar: {\n                    actions: [\"today\", \"clear\", \"accept\"],\n                  },\n                }}\n              />\n            </LocalizationProvider>\n          </FormControl>\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              deleteHistoryLogs().then();\n            }}\n          >\n            清理历史日志\n          </Button>\n        </Stack>\n      </SubCard>\n      <SubCard title=\"监控设置\">\n        <Stack justifyContent=\"flex-start\" alignItems=\"flex-start\" spacing={2}>\n          <Stack\n            direction={{ sm: \"column\", md: \"row\" }}\n            spacing={{ xs: 3, sm: 2, md: 4 }}\n          >\n            <FormControl fullWidth>\n              <InputLabel htmlFor=\"ChannelDisableThreshold\">\n                最长响应时间\n              </InputLabel>\n              <OutlinedInput\n                id=\"ChannelDisableThreshold\"\n                name=\"ChannelDisableThreshold\"\n                type=\"number\"\n                value={inputs.ChannelDisableThreshold}\n                onChange={handleInputChange}\n                label=\"最长响应时间\"\n                placeholder=\"单位秒，当运行渠道全部测试时，超过此时间将自动禁用渠道\"\n                disabled={loading}\n              />\n            </FormControl>\n            <FormControl fullWidth>\n              <InputLabel htmlFor=\"QuotaRemindThreshold\">\n                额度提醒阈值\n              </InputLabel>\n              <OutlinedInput\n                id=\"QuotaRemindThreshold\"\n                name=\"QuotaRemindThreshold\"\n                type=\"number\"\n                value={inputs.QuotaRemindThreshold}\n                onChange={handleInputChange}\n                label=\"额度提醒阈值\"\n                placeholder=\"低于此额度时将发送邮件提醒用户\"\n                disabled={loading}\n              />\n            </FormControl>\n          </Stack>\n          <FormControlLabel\n            label=\"失败时自动禁用渠道\"\n            control={\n              <Checkbox\n                checked={inputs.AutomaticDisableChannelEnabled === \"true\"}\n                onChange={handleInputChange}\n                name=\"AutomaticDisableChannelEnabled\"\n              />\n            }\n          />\n          <FormControlLabel\n            label=\"成功时自动启用渠道\"\n            control={\n              <Checkbox\n                checked={inputs.AutomaticEnableChannelEnabled === \"true\"}\n                onChange={handleInputChange}\n                name=\"AutomaticEnableChannelEnabled\"\n              />\n            }\n          />\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              submitConfig(\"monitor\").then();\n            }}\n          >\n            保存监控设置\n          </Button>\n        </Stack>\n      </SubCard>\n      <SubCard title=\"额度设置\">\n        <Stack justifyContent=\"flex-start\" alignItems=\"flex-start\" spacing={2}>\n          <Stack\n            direction={{ sm: \"column\", md: \"row\" }}\n            spacing={{ xs: 3, sm: 2, md: 4 }}\n          >\n            <FormControl fullWidth>\n              <InputLabel htmlFor=\"QuotaForNewUser\">新用户初始额度</InputLabel>\n              <OutlinedInput\n                id=\"QuotaForNewUser\"\n                name=\"QuotaForNewUser\"\n                type=\"number\"\n                value={inputs.QuotaForNewUser}\n                onChange={handleInputChange}\n                label=\"新用户初始额度\"\n                placeholder=\"例如：100\"\n                disabled={loading}\n              />\n            </FormControl>\n            <FormControl fullWidth>\n              <InputLabel htmlFor=\"PreConsumedQuota\">请求预扣费额度</InputLabel>\n              <OutlinedInput\n                id=\"PreConsumedQuota\"\n                name=\"PreConsumedQuota\"\n                type=\"number\"\n                value={inputs.PreConsumedQuota}\n                onChange={handleInputChange}\n                label=\"请求预扣费额度\"\n                placeholder=\"请求结束后多退少补\"\n                disabled={loading}\n              />\n            </FormControl>\n            <FormControl fullWidth>\n              <InputLabel htmlFor=\"QuotaForInviter\">\n                邀请新用户奖励额度\n              </InputLabel>\n              <OutlinedInput\n                id=\"QuotaForInviter\"\n                name=\"QuotaForInviter\"\n                type=\"number\"\n                label=\"邀请新用户奖励额度\"\n                value={inputs.QuotaForInviter}\n                onChange={handleInputChange}\n                placeholder=\"例如：2000\"\n                disabled={loading}\n              />\n            </FormControl>\n            <FormControl fullWidth>\n              <InputLabel htmlFor=\"QuotaForInvitee\">\n                新用户使用邀请码奖励额度\n              </InputLabel>\n              <OutlinedInput\n                id=\"QuotaForInvitee\"\n                name=\"QuotaForInvitee\"\n                type=\"number\"\n                label=\"新用户使用邀请码奖励额度\"\n                value={inputs.QuotaForInvitee}\n                onChange={handleInputChange}\n                autoComplete=\"new-password\"\n                placeholder=\"例如：1000\"\n                disabled={loading}\n              />\n            </FormControl>\n          </Stack>\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              submitConfig(\"quota\").then();\n            }}\n          >\n            保存额度设置\n          </Button>\n        </Stack>\n      </SubCard>\n      <SubCard title=\"倍率设置\">\n        <Stack justifyContent=\"flex-start\" alignItems=\"flex-start\" spacing={2}>\n          <FormControl fullWidth>\n            <TextField\n              multiline\n              maxRows={15}\n              id=\"channel-ModelRatio-label\"\n              label=\"模型倍率\"\n              value={inputs.ModelRatio}\n              name=\"ModelRatio\"\n              onChange={handleInputChange}\n              aria-describedby=\"helper-text-channel-ModelRatio-label\"\n              minRows={5}\n              placeholder=\"为一个 JSON 文本，键为模型名称，值为倍率\"\n            />\n          </FormControl>\n          <FormControl fullWidth>\n            <TextField\n              multiline\n              maxRows={15}\n              id=\"channel-CompletionRatio-label\"\n              label=\"补全倍率\"\n              value={inputs.CompletionRatio}\n              name=\"CompletionRatio\"\n              onChange={handleInputChange}\n              aria-describedby=\"helper-text-channel-CompletionRatio-label\"\n              minRows={5}\n              placeholder=\"为一个 JSON 文本，键为模型名称，值为倍率，此处的倍率设置是模型补全倍率相较于提示倍率的比例，使用该设置可强制覆盖 One API 的内部比例\"\n            />\n          </FormControl>\n          <FormControl fullWidth>\n            <TextField\n              multiline\n              maxRows={15}\n              id=\"channel-GroupRatio-label\"\n              label=\"分组倍率\"\n              value={inputs.GroupRatio}\n              name=\"GroupRatio\"\n              onChange={handleInputChange}\n              aria-describedby=\"helper-text-channel-GroupRatio-label\"\n              minRows={5}\n              placeholder=\"为一个 JSON 文本，键为分组名称，值为倍率\"\n            />\n          </FormControl>\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              submitConfig(\"ratio\").then();\n            }}\n          >\n            保存倍率设置\n          </Button>\n        </Stack>\n      </SubCard>\n    </Stack>\n  );\n};\n\nexport default OperationSetting;\n","import { useState, useEffect } from 'react';\nimport SubCard from 'ui-component/cards/SubCard';\nimport {\n  Stack,\n  FormControl,\n  InputLabel,\n  OutlinedInput,\n  Checkbox,\n  Button,\n  FormControlLabel,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Divider,\n  Alert,\n  Autocomplete,\n  TextField\n} from '@mui/material';\nimport Grid from '@mui/material/Unstable_Grid2';\nimport { showError, showSuccess, removeTrailingSlash } from 'utils/common'; //,\nimport { API } from 'utils/api';\nimport { createFilterOptions } from '@mui/material/Autocomplete';\n\nconst filter = createFilterOptions();\nconst SystemSetting = () => {\n  let [inputs, setInputs] = useState({\n    PasswordLoginEnabled: '',\n    PasswordRegisterEnabled: '',\n    EmailVerificationEnabled: '',\n    GitHubOAuthEnabled: '',\n    GitHubClientId: '',\n    GitHubClientSecret: '',\n    LarkClientId: '',\n    LarkClientSecret: '',\n    OidcEnabled: '',\n    OidcWellKnown: '',\n    OidcClientId: '',\n    OidcClientSecret: '',\n    OidcAuthorizationEndpoint: '',\n    OidcTokenEndpoint: '',\n    OidcUserinfoEndpoint: '',\n    Notice: '',\n    SMTPServer: '',\n    SMTPPort: '',\n    SMTPAccount: '',\n    SMTPFrom: '',\n    SMTPToken: '',\n    ServerAddress: '',\n    Footer: '',\n    WeChatAuthEnabled: '',\n    WeChatServerAddress: '',\n    WeChatServerToken: '',\n    WeChatAccountQRCodeImageURL: '',\n    TurnstileCheckEnabled: '',\n    TurnstileSiteKey: '',\n    TurnstileSecretKey: '',\n    RegisterEnabled: '',\n    EmailDomainRestrictionEnabled: '',\n    EmailDomainWhitelist: [],\n    MessagePusherAddress: '',\n    MessagePusherToken: ''\n  });\n  const [originInputs, setOriginInputs] = useState({});\n  let [loading, setLoading] = useState(false);\n  const [EmailDomainWhitelist, setEmailDomainWhitelist] = useState([]);\n  const [showPasswordWarningModal, setShowPasswordWarningModal] = useState(false);\n\n  const getOptions = async () => {\n    const res = await API.get('/api/option/');\n    const { success, message, data } = res.data;\n    if (success) {\n      let newInputs = {};\n      data.forEach((item) => {\n        newInputs[item.key] = item.value;\n      });\n      setInputs({\n        ...newInputs,\n        EmailDomainWhitelist: newInputs.EmailDomainWhitelist.split(',')\n      });\n      setOriginInputs(newInputs);\n\n      setEmailDomainWhitelist(newInputs.EmailDomainWhitelist.split(','));\n    } else {\n      showError(message);\n    }\n  };\n\n  useEffect(() => {\n    getOptions().then();\n  }, []);\n\n  const updateOption = async (key, value) => {\n    setLoading(true);\n    switch (key) {\n      case 'PasswordLoginEnabled':\n      case 'PasswordRegisterEnabled':\n      case 'EmailVerificationEnabled':\n      case 'GitHubOAuthEnabled':\n      case 'WeChatAuthEnabled':\n      case 'TurnstileCheckEnabled':\n      case 'EmailDomainRestrictionEnabled':\n      case 'RegisterEnabled':\n      case 'OidcEnabled':\n        value = inputs[key] === 'true' ? 'false' : 'true';\n        break;\n      default:\n        break;\n    }\n    const res = await API.put('/api/option/', {\n      key,\n      value\n    });\n    const { success, message } = res.data;\n    if (success) {\n      if (key === 'EmailDomainWhitelist') {\n        value = value.split(',');\n      }\n      setInputs((inputs) => ({\n        ...inputs,\n        [key]: value\n      }));\n      showSuccess('设置成功！');\n    } else {\n      showError(message);\n    }\n    setLoading(false);\n  };\n\n  const handleInputChange = async (event) => {\n    let { name, value } = event.target;\n\n    if (name === 'PasswordLoginEnabled' && inputs[name] === 'true') {\n      // block disabling password login\n      setShowPasswordWarningModal(true);\n      return;\n    }\n    if (\n      name === 'Notice' ||\n      name.startsWith('SMTP') ||\n      name === 'ServerAddress' ||\n      name === 'GitHubClientId' ||\n      name === 'GitHubClientSecret' ||\n      name === 'WeChatServerAddress' ||\n      name === 'WeChatServerToken' ||\n      name === 'WeChatAccountQRCodeImageURL' ||\n      name === 'TurnstileSiteKey' ||\n      name === 'TurnstileSecretKey' ||\n      name === 'EmailDomainWhitelist' ||\n      name === 'MessagePusherAddress' ||\n      name === 'MessagePusherToken' ||\n      name === 'LarkClientId' ||\n      name === 'LarkClientSecret' ||\n      name === 'OidcClientId' ||\n      name === 'OidcClientSecret' ||\n      name === 'OidcWellKnown' ||\n      name === 'OidcAuthorizationEndpoint' ||\n      name === 'OidcTokenEndpoint' ||\n      name === 'OidcUserinfoEndpoint'\n    )\n    {\n      setInputs((inputs) => ({ ...inputs, [name]: value }));\n    } else {\n      await updateOption(name, value);\n    }\n  };\n\n  const submitServerAddress = async () => {\n    let ServerAddress = removeTrailingSlash(inputs.ServerAddress);\n    await updateOption('ServerAddress', ServerAddress);\n  };\n\n  const submitSMTP = async () => {\n    if (originInputs['SMTPServer'] !== inputs.SMTPServer) {\n      await updateOption('SMTPServer', inputs.SMTPServer);\n    }\n    if (originInputs['SMTPAccount'] !== inputs.SMTPAccount) {\n      await updateOption('SMTPAccount', inputs.SMTPAccount);\n    }\n    if (originInputs['SMTPFrom'] !== inputs.SMTPFrom) {\n      await updateOption('SMTPFrom', inputs.SMTPFrom);\n    }\n    if (originInputs['SMTPPort'] !== inputs.SMTPPort && inputs.SMTPPort !== '') {\n      await updateOption('SMTPPort', inputs.SMTPPort);\n    }\n    if (originInputs['SMTPToken'] !== inputs.SMTPToken && inputs.SMTPToken !== '') {\n      await updateOption('SMTPToken', inputs.SMTPToken);\n    }\n  };\n\n  const submitEmailDomainWhitelist = async () => {\n    await updateOption('EmailDomainWhitelist', inputs.EmailDomainWhitelist.join(','));\n  };\n\n  const submitWeChat = async () => {\n    if (originInputs['WeChatServerAddress'] !== inputs.WeChatServerAddress) {\n      await updateOption('WeChatServerAddress', removeTrailingSlash(inputs.WeChatServerAddress));\n    }\n    if (originInputs['WeChatAccountQRCodeImageURL'] !== inputs.WeChatAccountQRCodeImageURL) {\n      await updateOption('WeChatAccountQRCodeImageURL', inputs.WeChatAccountQRCodeImageURL);\n    }\n    if (originInputs['WeChatServerToken'] !== inputs.WeChatServerToken && inputs.WeChatServerToken !== '') {\n      await updateOption('WeChatServerToken', inputs.WeChatServerToken);\n    }\n  };\n\n  const submitGitHubOAuth = async () => {\n    if (originInputs['GitHubClientId'] !== inputs.GitHubClientId) {\n      await updateOption('GitHubClientId', inputs.GitHubClientId);\n    }\n    if (originInputs['GitHubClientSecret'] !== inputs.GitHubClientSecret && inputs.GitHubClientSecret !== '') {\n      await updateOption('GitHubClientSecret', inputs.GitHubClientSecret);\n    }\n  };\n\n  const submitTurnstile = async () => {\n    if (originInputs['TurnstileSiteKey'] !== inputs.TurnstileSiteKey) {\n      await updateOption('TurnstileSiteKey', inputs.TurnstileSiteKey);\n    }\n    if (originInputs['TurnstileSecretKey'] !== inputs.TurnstileSecretKey && inputs.TurnstileSecretKey !== '') {\n      await updateOption('TurnstileSecretKey', inputs.TurnstileSecretKey);\n    }\n  };\n\n  const submitMessagePusher = async () => {\n    if (originInputs['MessagePusherAddress'] !== inputs.MessagePusherAddress) {\n      await updateOption('MessagePusherAddress', removeTrailingSlash(inputs.MessagePusherAddress));\n    }\n    if (originInputs['MessagePusherToken'] !== inputs.MessagePusherToken && inputs.MessagePusherToken !== '') {\n      await updateOption('MessagePusherToken', inputs.MessagePusherToken);\n    }\n  };\n\n  const submitLarkOAuth = async () => {\n    if (originInputs['LarkClientId'] !== inputs.LarkClientId) {\n      await updateOption('LarkClientId', inputs.LarkClientId);\n    }\n    if (originInputs['LarkClientSecret'] !== inputs.LarkClientSecret && inputs.LarkClientSecret !== '') {\n      await updateOption('LarkClientSecret', inputs.LarkClientSecret);\n    }\n  };\n\n  const submitOidc = async () => {\n    if (inputs.OidcWellKnown !== '') {\n      if (!inputs.OidcWellKnown.startsWith('http://') && !inputs.OidcWellKnown.startsWith('https://')) {\n        showError('Well-Known URL 必须以 http:// 或 https:// 开头');\n        return;\n      }\n      try {\n        const res = await API.get(inputs.OidcWellKnown);\n        inputs.OidcAuthorizationEndpoint = res.data['authorization_endpoint'];\n        inputs.OidcTokenEndpoint = res.data['token_endpoint'];\n        inputs.OidcUserinfoEndpoint = res.data['userinfo_endpoint'];\n        showSuccess('获取 OIDC 配置成功！');\n      } catch (err) {\n        showError(\"获取 OIDC 配置失败，请检查网络状况和 Well-Known URL 是否正确\");\n      }\n    }\n\n    if (originInputs['OidcWellKnown'] !== inputs.OidcWellKnown) {\n      await updateOption('OidcWellKnown', inputs.OidcWellKnown);\n    }\n    if (originInputs['OidcClientId'] !== inputs.OidcClientId) {\n      await updateOption('OidcClientId', inputs.OidcClientId);\n    }\n    if (originInputs['OidcClientSecret'] !== inputs.OidcClientSecret && inputs.OidcClientSecret !== '') {\n      await updateOption('OidcClientSecret', inputs.OidcClientSecret);\n    }\n    if (originInputs['OidcAuthorizationEndpoint'] !== inputs.OidcAuthorizationEndpoint) {\n      await updateOption('OidcAuthorizationEndpoint', inputs.OidcAuthorizationEndpoint);\n    }\n    if (originInputs['OidcTokenEndpoint'] !== inputs.OidcTokenEndpoint) {\n      await updateOption('OidcTokenEndpoint', inputs.OidcTokenEndpoint);\n    }\n    if (originInputs['OidcUserinfoEndpoint'] !== inputs.OidcUserinfoEndpoint) {\n      await updateOption('OidcUserinfoEndpoint', inputs.OidcUserinfoEndpoint);\n    }\n  };\n\n  return (\n    <>\n      <Stack spacing={2}>\n        <SubCard title=\"通用设置\">\n          <Grid container spacing={{ xs: 3, sm: 2, md: 4 }}>\n            <Grid xs={12}>\n              <FormControl fullWidth>\n                <InputLabel htmlFor=\"ServerAddress\">服务器地址</InputLabel>\n                <OutlinedInput\n                  id=\"ServerAddress\"\n                  name=\"ServerAddress\"\n                  value={inputs.ServerAddress || ''}\n                  onChange={handleInputChange}\n                  label=\"服务器地址\"\n                  placeholder=\"例如：https://yourdomain.com\"\n                  disabled={loading}\n                />\n              </FormControl>\n            </Grid>\n            <Grid xs={12}>\n              <Button variant=\"contained\" onClick={submitServerAddress}>\n                更新服务器地址\n              </Button>\n            </Grid>\n          </Grid>\n        </SubCard>\n        <SubCard title=\"配置登录注册\">\n          <Grid container spacing={{ xs: 3, sm: 2, md: 4 }}>\n            <Grid xs={12} md={3}>\n              <FormControlLabel\n                label=\"允许通过密码进行登录\"\n                control={\n                  <Checkbox checked={inputs.PasswordLoginEnabled === 'true'} onChange={handleInputChange} name=\"PasswordLoginEnabled\" />\n                }\n              />\n            </Grid>\n            <Grid xs={12} md={3}>\n              <FormControlLabel\n                label=\"允许通过密码进行注册\"\n                control={\n                  <Checkbox\n                    checked={inputs.PasswordRegisterEnabled === 'true'}\n                    onChange={handleInputChange}\n                    name=\"PasswordRegisterEnabled\"\n                  />\n                }\n              />\n            </Grid>\n            <Grid xs={12} md={3}>\n              <FormControlLabel\n                label=\"通过密码注册时需要进行邮箱验证\"\n                control={\n                  <Checkbox\n                    checked={inputs.EmailVerificationEnabled === 'true'}\n                    onChange={handleInputChange}\n                    name=\"EmailVerificationEnabled\"\n                  />\n                }\n              />\n            </Grid>\n            <Grid xs={12} md={3}>\n              <FormControlLabel\n                label=\"允许通过 GitHub 账户登录 & 注册\"\n                control={<Checkbox checked={inputs.GitHubOAuthEnabled === 'true'} onChange={handleInputChange} name=\"GitHubOAuthEnabled\" />}\n              />\n            </Grid>\n            <Grid xs={12} md={3}>\n              <FormControlLabel\n                label=\"允许通过 OIDC 登录 & 注册\"\n                control={<Checkbox checked={inputs.OidcEnabled === 'true'} onChange={handleInputChange} name=\"OidcEnabled\" />}\n              />\n            </Grid>\n            <Grid xs={12} md={3}>\n              <FormControlLabel\n                label=\"允许通过微信登录 & 注册\"\n                control={<Checkbox checked={inputs.WeChatAuthEnabled === 'true'} onChange={handleInputChange} name=\"WeChatAuthEnabled\" />}\n              />\n            </Grid>\n            <Grid xs={12} md={3}>\n              <FormControlLabel\n                label=\"允许新用户注册（此项为否时，新用户将无法以任何方式进行注册）\"\n                control={<Checkbox checked={inputs.RegisterEnabled === 'true'} onChange={handleInputChange} name=\"RegisterEnabled\" />}\n              />\n            </Grid>\n            <Grid xs={12} md={3}>\n              <FormControlLabel\n                label=\"启用 Turnstile 用户校验\"\n                control={\n                  <Checkbox checked={inputs.TurnstileCheckEnabled === 'true'} onChange={handleInputChange} name=\"TurnstileCheckEnabled\" />\n                }\n              />\n            </Grid>\n          </Grid>\n        </SubCard>\n        <SubCard title=\"配置邮箱域名白名单\" subTitle=\"用以防止恶意用户利用临时邮箱批量注册\">\n          <Grid container spacing={{ xs: 3, sm: 2, md: 4 }}>\n            <Grid xs={12}>\n              <FormControlLabel\n                label=\"启用邮箱域名白名单\"\n                control={\n                  <Checkbox\n                    checked={inputs.EmailDomainRestrictionEnabled === 'true'}\n                    onChange={handleInputChange}\n                    name=\"EmailDomainRestrictionEnabled\"\n                  />\n                }\n              />\n            </Grid>\n            <Grid xs={12}>\n              <FormControl fullWidth>\n                <Autocomplete\n                  multiple\n                  freeSolo\n                  id=\"EmailDomainWhitelist\"\n                  options={EmailDomainWhitelist}\n                  value={inputs.EmailDomainWhitelist}\n                  onChange={(e, value) => {\n                    const event = {\n                      target: {\n                        name: 'EmailDomainWhitelist',\n                        value: value\n                      }\n                    };\n                    handleInputChange(event);\n                  }}\n                  filterSelectedOptions\n                  renderInput={(params) => <TextField {...params} name=\"EmailDomainWhitelist\" label=\"允许的邮箱域名\" />}\n                  filterOptions={(options, params) => {\n                    const filtered = filter(options, params);\n                    const { inputValue } = params;\n                    const isExisting = options.some((option) => inputValue === option);\n                    if (inputValue !== '' && !isExisting) {\n                      filtered.push(inputValue);\n                    }\n                    return filtered;\n                  }}\n                />\n              </FormControl>\n            </Grid>\n            <Grid xs={12}>\n              <Button variant=\"contained\" onClick={submitEmailDomainWhitelist}>\n                保存邮箱域名白名单设置\n              </Button>\n            </Grid>\n          </Grid>\n        </SubCard>\n        <SubCard title=\"配置 SMTP\" subTitle=\"用以支持系统的邮件发送\">\n          <Grid container spacing={{ xs: 3, sm: 2, md: 4 }}>\n            <Grid xs={12} md={4}>\n              <FormControl fullWidth>\n                <InputLabel htmlFor=\"SMTPServer\">SMTP 服务器地址</InputLabel>\n                <OutlinedInput\n                  id=\"SMTPServer\"\n                  name=\"SMTPServer\"\n                  value={inputs.SMTPServer || ''}\n                  onChange={handleInputChange}\n                  label=\"SMTP 服务器地址\"\n                  placeholder=\"例如：smtp.qq.com\"\n                  disabled={loading}\n                />\n              </FormControl>\n            </Grid>\n            <Grid xs={12} md={4}>\n              <FormControl fullWidth>\n                <InputLabel htmlFor=\"SMTPPort\">SMTP 端口</InputLabel>\n                <OutlinedInput\n                  id=\"SMTPPort\"\n                  name=\"SMTPPort\"\n                  value={inputs.SMTPPort || ''}\n                  onChange={handleInputChange}\n                  label=\"SMTP 端口\"\n                  placeholder=\"默认: 587\"\n                  disabled={loading}\n                />\n              </FormControl>\n            </Grid>\n            <Grid xs={12} md={4}>\n              <FormControl fullWidth>\n                <InputLabel htmlFor=\"SMTPAccount\">SMTP 账户</InputLabel>\n                <OutlinedInput\n                  id=\"SMTPAccount\"\n                  name=\"SMTPAccount\"\n                  value={inputs.SMTPAccount || ''}\n                  onChange={handleInputChange}\n                  label=\"SMTP 账户\"\n                  placeholder=\"通常是邮箱地址\"\n                  disabled={loading}\n                />\n              </FormControl>\n            </Grid>\n            <Grid xs={12} md={4}>\n              <FormControl fullWidth>\n                <InputLabel htmlFor=\"SMTPFrom\">SMTP 发送者邮箱</InputLabel>\n                <OutlinedInput\n                  id=\"SMTPFrom\"\n                  name=\"SMTPFrom\"\n                  value={inputs.SMTPFrom || ''}\n                  onChange={handleInputChange}\n                  label=\"SMTP 发送者邮箱\"\n                  placeholder=\"通常和邮箱地址保持一致\"\n                  disabled={loading}\n                />\n              </FormControl>\n            </Grid>\n            <Grid xs={12} md={4}>\n              <FormControl fullWidth>\n                <InputLabel htmlFor=\"SMTPToken\">SMTP 访问凭证</InputLabel>\n                <OutlinedInput\n                  id=\"SMTPToken\"\n                  name=\"SMTPToken\"\n                  value={inputs.SMTPToken || ''}\n                  onChange={handleInputChange}\n                  label=\"SMTP 访问凭证\"\n                  placeholder=\"敏感信息不会发送到前端显示\"\n                  disabled={loading}\n                />\n              </FormControl>\n            </Grid>\n            <Grid xs={12}>\n              <Button variant=\"contained\" onClick={submitSMTP}>\n                保存 SMTP 设置\n              </Button>\n            </Grid>\n          </Grid>\n        </SubCard>\n        <SubCard\n          title=\"配置 GitHub OAuth App\"\n          subTitle={\n            <span>\n              {' '}\n              用以支持通过 GitHub 进行登录注册，\n              <a href=\"https://github.com/settings/developers\" target=\"_blank\" rel=\"noopener noreferrer\">\n                点击此处\n              </a>\n              管理你的 GitHub OAuth App\n            </span>\n          }\n        >\n          <Grid container spacing={{ xs: 3, sm: 2, md: 4 }}>\n            <Grid xs={12}>\n              <Alert severity=\"info\" sx={{ wordWrap: 'break-word' }}>\n                Homepage URL 填 <b>{inputs.ServerAddress}</b>\n                ，Authorization callback URL 填 <b>{`${inputs.ServerAddress}/oauth/github`}</b>\n              </Alert>\n            </Grid>\n            <Grid xs={12} md={6}>\n              <FormControl fullWidth>\n                <InputLabel htmlFor=\"GitHubClientId\">GitHub Client ID</InputLabel>\n                <OutlinedInput\n                  id=\"GitHubClientId\"\n                  name=\"GitHubClientId\"\n                  value={inputs.GitHubClientId || ''}\n                  onChange={handleInputChange}\n                  label=\"GitHub Client ID\"\n                  placeholder=\"输入你注册的 GitHub OAuth APP 的 ID\"\n                  disabled={loading}\n                />\n              </FormControl>\n            </Grid>\n            <Grid xs={12} md={6}>\n              <FormControl fullWidth>\n                <InputLabel htmlFor=\"GitHubClientSecret\">GitHub Client Secret</InputLabel>\n                <OutlinedInput\n                  id=\"GitHubClientSecret\"\n                  name=\"GitHubClientSecret\"\n                  value={inputs.GitHubClientSecret || ''}\n                  onChange={handleInputChange}\n                  label=\"GitHub Client Secret\"\n                  placeholder=\"敏感信息不会发送到前端显示\"\n                  disabled={loading}\n                />\n              </FormControl>\n            </Grid>\n            <Grid xs={12}>\n              <Button variant=\"contained\" onClick={submitGitHubOAuth}>\n                保存 GitHub OAuth 设置\n              </Button>\n            </Grid>\n          </Grid>\n        </SubCard>\n        <SubCard\n          title=\"配置飞书授权登录\"\n          subTitle={\n            <span>\n              {' '}\n              用以支持通过飞书进行登录注册，\n              <a href=\"https://open.feishu.cn/app\" target=\"_blank\" rel=\"noreferrer\">\n                点击此处\n              </a>\n              管理你的飞书应用\n            </span>\n          }\n        >\n          <Grid container spacing={{ xs: 3, sm: 2, md: 4 }}>\n            <Grid xs={12}>\n              <Alert severity=\"info\" sx={{ wordWrap: 'break-word' }}>\n                主页链接填 <code>{inputs.ServerAddress}</code>\n                ，重定向 URL 填 <code>{`${inputs.ServerAddress}/oauth/lark`}</code>\n              </Alert>\n            </Grid>\n            <Grid xs={12} md={6}>\n              <FormControl fullWidth>\n                <InputLabel htmlFor=\"LarkClientId\">App ID</InputLabel>\n                <OutlinedInput\n                  id=\"LarkClientId\"\n                  name=\"LarkClientId\"\n                  value={inputs.LarkClientId || ''}\n                  onChange={handleInputChange}\n                  label=\"App ID\"\n                  placeholder=\"输入 App ID\"\n                  disabled={loading}\n                />\n              </FormControl>\n            </Grid>\n            <Grid xs={12} md={6}>\n              <FormControl fullWidth>\n                <InputLabel htmlFor=\"LarkClientSecret\">App Secret</InputLabel>\n                <OutlinedInput\n                  id=\"LarkClientSecret\"\n                  name=\"LarkClientSecret\"\n                  value={inputs.LarkClientSecret || ''}\n                  onChange={handleInputChange}\n                  label=\"App Secret\"\n                  placeholder=\"敏感信息不会发送到前端显示\"\n                  disabled={loading}\n                />\n              </FormControl>\n            </Grid>\n            <Grid xs={12}>\n              <Button variant=\"contained\" onClick={submitLarkOAuth}>\n                保存飞书 OAuth 设置\n              </Button>\n            </Grid>\n          </Grid>\n        </SubCard>\n        <SubCard\n          title=\"配置 WeChat Server\"\n          subTitle={\n            <span>\n              用以支持通过微信进行登录注册，\n              <a href=\"https://github.com/songquanpeng/wechat-server\" target=\"_blank\" rel=\"noopener noreferrer\">\n                点击此处\n              </a>\n              了解 WeChat Server\n            </span>\n          }\n        >\n          <Grid container spacing={{ xs: 3, sm: 2, md: 4 }}>\n            <Grid xs={12} md={4}>\n              <FormControl fullWidth>\n                <InputLabel htmlFor=\"WeChatServerAddress\">WeChat Server 服务器地址</InputLabel>\n                <OutlinedInput\n                  id=\"WeChatServerAddress\"\n                  name=\"WeChatServerAddress\"\n                  value={inputs.WeChatServerAddress || ''}\n                  onChange={handleInputChange}\n                  label=\"WeChat Server 服务器地址\"\n                  placeholder=\"例如：https://yourdomain.com\"\n                  disabled={loading}\n                />\n              </FormControl>\n            </Grid>\n            <Grid xs={12} md={4}>\n              <FormControl fullWidth>\n                <InputLabel htmlFor=\"WeChatServerToken\">WeChat Server 访问凭证</InputLabel>\n                <OutlinedInput\n                  id=\"WeChatServerToken\"\n                  name=\"WeChatServerToken\"\n                  value={inputs.WeChatServerToken || ''}\n                  onChange={handleInputChange}\n                  label=\"WeChat Server 访问凭证\"\n                  placeholder=\"敏感信息不会发送到前端显示\"\n                  disabled={loading}\n                />\n              </FormControl>\n            </Grid>\n            <Grid xs={12} md={4}>\n              <FormControl fullWidth>\n                <InputLabel htmlFor=\"WeChatAccountQRCodeImageURL\">微信公众号二维码图片链接</InputLabel>\n                <OutlinedInput\n                  id=\"WeChatAccountQRCodeImageURL\"\n                  name=\"WeChatAccountQRCodeImageURL\"\n                  value={inputs.WeChatAccountQRCodeImageURL || ''}\n                  onChange={handleInputChange}\n                  label=\"微信公众号二维码图片链接\"\n                  placeholder=\"输入一个图片链接\"\n                  disabled={loading}\n                />\n              </FormControl>\n            </Grid>\n            <Grid xs={12}>\n              <Button variant=\"contained\" onClick={submitWeChat}>\n                保存 WeChat Server 设置\n              </Button>\n            </Grid>\n          </Grid>\n        </SubCard>\n\n        <SubCard\n          title=\"配置 OIDC\"\n          subTitle={\n            <span>\n              用以支持通过 OIDC 登录，例如 Okta、Auth0 等兼容 OIDC 协议的 IdP\n            </span>\n          }\n        >\n          <Grid container spacing={ { xs: 3, sm: 2, md: 4 } }>\n            <Grid xs={ 12 } md={ 12 }>\n              <Alert severity=\"info\" sx={ { wordWrap: 'break-word' } }>\n                主页链接填 <code>{ inputs.ServerAddress }</code>\n                ，重定向 URL 填 <code>{ `${ inputs.ServerAddress }/oauth/oidc` }</code>\n              </Alert> <br />\n              <Alert severity=\"info\" sx={ { wordWrap: 'break-word' } }>\n                若你的 OIDC Provider 支持 Discovery Endpoint，你可以仅填写 OIDC Well-Known URL，系统会自动获取 OIDC 配置\n              </Alert>\n            </Grid>\n            <Grid xs={ 12 } md={ 6 }>\n              <FormControl fullWidth>\n                <InputLabel htmlFor=\"OidcClientId\">Client ID</InputLabel>\n                <OutlinedInput\n                  id=\"OidcClientId\"\n                  name=\"OidcClientId\"\n                  value={ inputs.OidcClientId || '' }\n                  onChange={ handleInputChange }\n                  label=\"Client ID\"\n                  placeholder=\"输入 OIDC 的 Client ID\"\n                  disabled={ loading }\n                />\n              </FormControl>\n            </Grid>\n            <Grid xs={ 12 } md={ 6 }>\n              <FormControl fullWidth>\n                <InputLabel htmlFor=\"OidcClientSecret\">Client Secret</InputLabel>\n                <OutlinedInput\n                  id=\"OidcClientSecret\"\n                  name=\"OidcClientSecret\"\n                  value={ inputs.OidcClientSecret || '' }\n                  onChange={ handleInputChange }\n                  label=\"Client Secret\"\n                  placeholder=\"敏感信息不会发送到前端显示\"\n                  disabled={ loading }\n                />\n              </FormControl>\n            </Grid>\n            <Grid xs={ 12 } md={ 6 }>\n              <FormControl fullWidth>\n                <InputLabel htmlFor=\"OidcWellKnown\">Well-Known URL</InputLabel>\n                <OutlinedInput\n                  id=\"OidcWellKnown\"\n                  name=\"OidcWellKnown\"\n                  value={ inputs.OidcWellKnown || '' }\n                  onChange={ handleInputChange }\n                  label=\"Well-Known URL\"\n                  placeholder=\"请输入 OIDC 的 Well-Known URL\"\n                  disabled={ loading }\n                />\n              </FormControl>\n            </Grid>\n            <Grid xs={ 12 } md={ 6 }>\n              <FormControl fullWidth>\n                <InputLabel htmlFor=\"OidcAuthorizationEndpoint\">Authorization Endpoint</InputLabel>\n                <OutlinedInput\n                  id=\"OidcAuthorizationEndpoint\"\n                  name=\"OidcAuthorizationEndpoint\"\n                  value={ inputs.OidcAuthorizationEndpoint || '' }\n                  onChange={ handleInputChange }\n                  label=\"Authorization Endpoint\"\n                  placeholder=\"输入 OIDC 的 Authorization Endpoint\"\n                  disabled={ loading }\n                />\n              </FormControl>\n            </Grid>\n            <Grid xs={ 12 } md={ 6 }>\n              <FormControl fullWidth>\n                <InputLabel htmlFor=\"OidcTokenEndpoint\">Token Endpoint</InputLabel>\n                <OutlinedInput\n                  id=\"OidcTokenEndpoint\"\n                  name=\"OidcTokenEndpoint\"\n                  value={ inputs.OidcTokenEndpoint || '' }\n                  onChange={ handleInputChange }\n                  label=\"Token Endpoint\"\n                  placeholder=\"输入 OIDC 的 Token Endpoint\"\n                  disabled={ loading }\n                />\n              </FormControl>\n            </Grid>\n            <Grid xs={ 12 } md={ 6 }>\n              <FormControl fullWidth>\n                <InputLabel htmlFor=\"OidcUserinfoEndpoint\">Userinfo Endpoint</InputLabel>\n                <OutlinedInput\n                  id=\"OidcUserinfoEndpoint\"\n                  name=\"OidcUserinfoEndpoint\"\n                  value={ inputs.OidcUserinfoEndpoint || '' }\n                  onChange={ handleInputChange }\n                  label=\"Userinfo Endpoint\"\n                  placeholder=\"输入 OIDC 的 Userinfo Endpoint\"\n                  disabled={ loading }\n                />\n              </FormControl>\n            </Grid>\n            <Grid xs={ 12 }>\n              <Button variant=\"contained\" onClick={ submitOidc }>\n                保存 OIDC 设置\n              </Button>\n            </Grid>\n          </Grid>\n        </SubCard>\n\n        <SubCard\n          title=\"配置 Message Pusher\"\n          subTitle={\n            <span>\n              用以推送报警信息，\n              <a href=\"https://github.com/songquanpeng/message-pusher\" target=\"_blank\" rel=\"noreferrer\">\n                点击此处\n              </a>\n              了解 Message Pusher\n            </span>\n          }\n        >\n          <Grid container spacing={{ xs: 3, sm: 2, md: 4 }}>\n            <Grid xs={12} md={6}>\n              <FormControl fullWidth>\n                <InputLabel htmlFor=\"MessagePusherAddress\">Message Pusher 推送地址</InputLabel>\n                <OutlinedInput\n                  id=\"MessagePusherAddress\"\n                  name=\"MessagePusherAddress\"\n                  value={inputs.MessagePusherAddress || ''}\n                  onChange={handleInputChange}\n                  label=\"Message Pusher 推送地址\"\n                  placeholder=\"例如：https://msgpusher.com/push/your_username\"\n                  disabled={loading}\n                />\n              </FormControl>\n            </Grid>\n            <Grid xs={12} md={6}>\n              <FormControl fullWidth>\n                <InputLabel htmlFor=\"MessagePusherToken\">Message Pusher 访问凭证</InputLabel>\n                <OutlinedInput\n                  id=\"MessagePusherToken\"\n                  name=\"MessagePusherToken\"\n                  type=\"password\"\n                  value={inputs.MessagePusherToken || ''}\n                  onChange={handleInputChange}\n                  label=\"Message Pusher 访问凭证\"\n                  placeholder=\"敏感信息不会发送到前端显示\"\n                  disabled={loading}\n                />\n              </FormControl>\n            </Grid>\n            <Grid xs={12}>\n              <Button variant=\"contained\" onClick={submitMessagePusher}>\n                保存 Message Pusher 设置\n              </Button>\n            </Grid>\n          </Grid>\n        </SubCard>\n        <SubCard\n          title=\"配置 Turnstile\"\n          subTitle={\n            <span>\n              用以支持用户校验，\n              <a href=\"https://dash.cloudflare.com/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                点击此处\n              </a>\n              管理你的 Turnstile Sites，推荐选择 Invisible Widget Type\n            </span>\n          }\n        >\n          <Grid container spacing={{ xs: 3, sm: 2, md: 4 }}>\n            <Grid xs={12} md={6}>\n              <FormControl fullWidth>\n                <InputLabel htmlFor=\"TurnstileSiteKey\">Turnstile Site Key</InputLabel>\n                <OutlinedInput\n                  id=\"TurnstileSiteKey\"\n                  name=\"TurnstileSiteKey\"\n                  value={inputs.TurnstileSiteKey || ''}\n                  onChange={handleInputChange}\n                  label=\"Turnstile Site Key\"\n                  placeholder=\"输入你注册的 Turnstile Site Key\"\n                  disabled={loading}\n                />\n              </FormControl>\n            </Grid>\n            <Grid xs={12} md={6}>\n              <FormControl fullWidth>\n                <InputLabel htmlFor=\"TurnstileSecretKey\">Turnstile Secret Key</InputLabel>\n                <OutlinedInput\n                  id=\"TurnstileSecretKey\"\n                  name=\"TurnstileSecretKey\"\n                  type=\"password\"\n                  value={inputs.TurnstileSecretKey || ''}\n                  onChange={handleInputChange}\n                  label=\"Turnstile Secret Key\"\n                  placeholder=\"敏感信息不会发送到前端显示\"\n                  disabled={loading}\n                />\n              </FormControl>\n            </Grid>\n            <Grid xs={12}>\n              <Button variant=\"contained\" onClick={submitTurnstile}>\n                保存 Turnstile 设置\n              </Button>\n            </Grid>\n          </Grid>\n        </SubCard>\n      </Stack>\n      <Dialog open={showPasswordWarningModal} onClose={() => setShowPasswordWarningModal(false)} maxWidth={'md'}>\n        <DialogTitle sx={{ margin: '0px', fontWeight: 700, lineHeight: '1.55556', padding: '24px', fontSize: '1.125rem' }}>\n          警告\n        </DialogTitle>\n        <Divider />\n        <DialogContent>取消密码登录将导致所有未绑定其他登录方式的用户（包括管理员）无法通过密码登录，确认取消？</DialogContent>\n        <DialogActions>\n          <Button onClick={() => setShowPasswordWarningModal(false)}>取消</Button>\n          <Button\n            sx={{ color: 'error.main' }}\n            onClick={async () => {\n              setShowPasswordWarningModal(false);\n              await updateOption('PasswordLoginEnabled', 'false');\n            }}\n          >\n            确定\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default SystemSetting;\n","import { useState, useEffect } from 'react';\nimport SubCard from 'ui-component/cards/SubCard';\nimport {\n    Stack,\n    FormControl,\n    InputLabel,\n    OutlinedInput,\n    Button,\n    Alert,\n    TextField,\n    Dialog,\n    DialogTitle,\n    DialogActions,\n    DialogContent,\n    Divider, Link\n} from '@mui/material';\nimport Grid from '@mui/material/Unstable_Grid2';\nimport { showError, showSuccess } from 'utils/common'; //,\nimport { API } from 'utils/api';\nimport { marked } from 'marked';\n\nconst OtherSetting = () => {\n  let [inputs, setInputs] = useState({\n    Footer: '',\n    Notice: '',\n    About: '',\n    SystemName: '',\n    Logo: '',\n    HomePageContent: '',\n    Theme: '',\n  });\n  let [loading, setLoading] = useState(false);\n  const [showUpdateModal, setShowUpdateModal] = useState(false);\n  const [updateData, setUpdateData] = useState({\n    tag_name: '',\n    content: ''\n  });\n\n  const getOptions = async () => {\n    const res = await API.get('/api/option/');\n    const { success, message, data } = res.data;\n    if (success) {\n      let newInputs = {};\n      data.forEach((item) => {\n        if (item.key in inputs) {\n          newInputs[item.key] = item.value;\n        }\n      });\n      setInputs(newInputs);\n    } else {\n      showError(message);\n    }\n  };\n\n  useEffect(() => {\n    getOptions().then();\n  }, []);\n\n  const updateOption = async (key, value) => {\n    setLoading(true);\n    const res = await API.put('/api/option/', {\n      key,\n      value\n    });\n    const { success, message } = res.data;\n    if (success) {\n      setInputs((inputs) => ({ ...inputs, [key]: value }));\n      showSuccess('保存成功');\n    } else {\n      showError(message);\n    }\n    setLoading(false);\n  };\n\n  const handleInputChange = async (event) => {\n    let { name, value } = event.target;\n    setInputs((inputs) => ({ ...inputs, [name]: value }));\n  };\n\n  const submitNotice = async () => {\n    await updateOption('Notice', inputs.Notice);\n  };\n\n  const submitFooter = async () => {\n    await updateOption('Footer', inputs.Footer);\n  };\n\n  const submitSystemName = async () => {\n    await updateOption('SystemName', inputs.SystemName);\n  };\n\n  const submitTheme = async () => {\n    await updateOption('Theme', inputs.Theme);\n  };\n\n  const submitLogo = async () => {\n    await updateOption('Logo', inputs.Logo);\n  };\n\n  const submitAbout = async () => {\n    await updateOption('About', inputs.About);\n  };\n\n  const submitOption = async (key) => {\n    await updateOption(key, inputs[key]);\n  };\n\n  const openGitHubRelease = () => {\n    window.location = 'https://github.com/songquanpeng/one-api/releases/latest';\n  };\n\n  const checkUpdate = async () => {\n    const res = await API.get('https://api.github.com/repos/songquanpeng/one-api/releases/latest');\n    const { tag_name, body } = res.data;\n    if (tag_name === process.env.REACT_APP_VERSION) {\n      showSuccess(`已是最新版本：${tag_name}`);\n    } else {\n      setUpdateData({\n        tag_name: tag_name,\n        content: marked.parse(body)\n      });\n      setShowUpdateModal(true);\n    }\n  };\n\n  return (\n    <>\n      <Stack spacing={2}>\n        <SubCard title=\"通用设置\">\n          <Grid container spacing={{ xs: 3, sm: 2, md: 4 }}>\n            <Grid xs={12}>\n              <Button variant=\"contained\" onClick={checkUpdate}>\n                检查更新\n              </Button>\n            </Grid>\n            <Grid xs={12}>\n              <FormControl fullWidth>\n                <TextField\n                  multiline\n                  maxRows={15}\n                  id=\"Notice\"\n                  label=\"公告\"\n                  value={inputs.Notice}\n                  name=\"Notice\"\n                  onChange={handleInputChange}\n                  minRows={10}\n                  placeholder=\"在此输入新的公告内容，支持 Markdown & HTML 代码\"\n                />\n              </FormControl>\n            </Grid>\n            <Grid xs={12}>\n              <Button variant=\"contained\" onClick={submitNotice}>\n                保存公告\n              </Button>\n            </Grid>\n          </Grid>\n        </SubCard>\n        <SubCard title=\"个性化设置\">\n          <Grid container spacing={{ xs: 3, sm: 2, md: 4 }}>\n            <Grid xs={12}>\n              <FormControl fullWidth>\n                <InputLabel htmlFor=\"SystemName\">系统名称</InputLabel>\n                <OutlinedInput\n                  id=\"SystemName\"\n                  name=\"SystemName\"\n                  value={inputs.SystemName || ''}\n                  onChange={handleInputChange}\n                  label=\"系统名称\"\n                  placeholder=\"在此输入系统名称\"\n                  disabled={loading}\n                />\n              </FormControl>\n            </Grid>\n            <Grid xs={12}>\n              <Button variant=\"contained\" onClick={submitSystemName}>\n                设置系统名称\n              </Button>\n            </Grid>\n            <Grid xs={12}>\n              <FormControl fullWidth>\n                <InputLabel htmlFor=\"Theme\">主题名称</InputLabel>\n                <OutlinedInput\n                    id=\"Theme\"\n                    name=\"Theme\"\n                    value={inputs.Theme || ''}\n                    onChange={handleInputChange}\n                    label=\"主题名称\"\n                    placeholder=\"请输入主题名称\"\n                    disabled={loading}\n                />\n              </FormControl>\n            </Grid>\n            <Grid xs={12}>\n              <Button variant=\"contained\" onClick={submitTheme}>\n                设置主题（重启生效）\n              </Button>\n            </Grid>\n            <Grid xs={12}>\n              <FormControl fullWidth>\n                <InputLabel htmlFor=\"Logo\">Logo 图片地址</InputLabel>\n                <OutlinedInput\n                  id=\"Logo\"\n                  name=\"Logo\"\n                  value={inputs.Logo || ''}\n                  onChange={handleInputChange}\n                  label=\"Logo 图片地址\"\n                  placeholder=\"在此输入Logo 图片地址\"\n                  disabled={loading}\n                />\n              </FormControl>\n            </Grid>\n            <Grid xs={12}>\n              <Button variant=\"contained\" onClick={submitLogo}>\n                设置 Logo\n              </Button>\n            </Grid>\n            <Grid xs={12}>\n              <FormControl fullWidth>\n                <TextField\n                  multiline\n                  maxRows={15}\n                  id=\"HomePageContent\"\n                  label=\"首页内容\"\n                  value={inputs.HomePageContent}\n                  name=\"HomePageContent\"\n                  onChange={handleInputChange}\n                  minRows={10}\n                  placeholder=\"在此输入首页内容，支持 Markdown & HTML 代码，设置后首页的状态信息将不再显示。如果输入的是一个链接，则会使用该链接作为 iframe 的 src 属性，这允许你设置任意网页作为首页。\"\n                />\n              </FormControl>\n            </Grid>\n            <Grid xs={12}>\n              <Button variant=\"contained\" onClick={() => submitOption('HomePageContent')}>\n                保存首页内容\n              </Button>\n            </Grid>\n            <Grid xs={12}>\n              <FormControl fullWidth>\n                <TextField\n                  multiline\n                  maxRows={15}\n                  id=\"About\"\n                  label=\"关于\"\n                  value={inputs.About}\n                  name=\"About\"\n                  onChange={handleInputChange}\n                  minRows={10}\n                  placeholder=\"在此输入新的关于内容，支持 Markdown & HTML 代码。如果输入的是一个链接，则会使用该链接作为 iframe 的 src 属性，这允许你设置任意网页作为关于页面。\"\n                />\n              </FormControl>\n            </Grid>\n            <Grid xs={12}>\n              <Button variant=\"contained\" onClick={submitAbout}>\n                保存关于\n              </Button>\n            </Grid>\n            <Grid xs={12}>\n              <Alert severity=\"warning\">\n                移除 One API 的版权标识必须首先获得授权，项目维护需要花费大量精力，如果本项目对你有意义，请主动支持本项目。\n              </Alert>\n            </Grid>\n            <Grid xs={12}>\n              <FormControl fullWidth>\n                <TextField\n                  multiline\n                  maxRows={15}\n                  id=\"Footer\"\n                  label=\"页脚\"\n                  value={inputs.Footer}\n                  name=\"Footer\"\n                  onChange={handleInputChange}\n                  minRows={10}\n                  placeholder=\"在此输入新的页脚，留空则使用默认页脚，支持 HTML 代码\"\n                />\n              </FormControl>\n            </Grid>\n            <Grid xs={12}>\n              <Button variant=\"contained\" onClick={submitFooter}>\n                设置页脚\n              </Button>\n            </Grid>\n          </Grid>\n        </SubCard>\n      </Stack>\n      <Dialog open={showUpdateModal} onClose={() => setShowUpdateModal(false)} fullWidth maxWidth={'md'}>\n        <DialogTitle sx={{ margin: '0px', fontWeight: 700, lineHeight: '1.55556', padding: '24px', fontSize: '1.125rem' }}>\n          新版本：{updateData.tag_name}\n        </DialogTitle>\n        <Divider />\n        <DialogContent>\n          {' '}\n          <div dangerouslySetInnerHTML={{ __html: updateData.content }}></div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setShowUpdateModal(false)}>关闭</Button>\n          <Button\n            onClick={async () => {\n              setShowUpdateModal(false);\n              openGitHubRelease();\n            }}\n          >\n            去GitHub查看\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default OtherSetting;\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Tabs, Tab, Box, Card } from '@mui/material';\nimport { IconSettings2, IconActivity, IconSettings } from '@tabler/icons-react';\nimport OperationSetting from './component/OperationSetting';\nimport SystemSetting from './component/SystemSetting';\nimport OtherSetting from './component/OtherSetting';\nimport AdminContainer from 'ui-component/AdminContainer';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nfunction CustomTabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div role=\"tabpanel\" hidden={value !== index} id={`setting-tabpanel-${index}`} aria-labelledby={`setting-tab-${index}`} {...other}>\n      {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\n    </div>\n  );\n}\n\nCustomTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `setting-tab-${index}`,\n    'aria-controls': `setting-tabpanel-${index}`\n  };\n}\n\nconst Setting = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const hash = location.hash.replace('#', '');\n  const tabMap = {\n    operation: 0,\n    system: 1,\n    other: 2\n  };\n  const [value, setValue] = useState(tabMap[hash] || 0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    const hashArray = Object.keys(tabMap);\n    navigate(`#${hashArray[newValue]}`);\n  };\n\n  useEffect(() => {\n    const handleHashChange = () => {\n      const hash = location.hash.replace('#', '');\n      setValue(tabMap[hash] || 0);\n    };\n    window.addEventListener('hashchange', handleHashChange);\n    return () => {\n      window.removeEventListener('hashchange', handleHashChange);\n    };\n  }, [location, tabMap]);\n\n  return (\n    <>\n      <Card>\n        <AdminContainer>\n          <Box sx={{ width: '100%' }}>\n            <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n              <Tabs value={value} onChange={handleChange} variant=\"scrollable\" scrollButtons=\"auto\">\n                <Tab label=\"运营设置\" {...a11yProps(0)} icon={<IconActivity />} iconPosition=\"start\" />\n                <Tab label=\"系统设置\" {...a11yProps(1)} icon={<IconSettings />} iconPosition=\"start\" />\n                <Tab label=\"其他设置\" {...a11yProps(2)} icon={<IconSettings2 />} iconPosition=\"start\" />\n              </Tabs>\n            </Box>\n            <CustomTabPanel value={value} index={0}>\n              <OperationSetting />\n            </CustomTabPanel>\n            <CustomTabPanel value={value} index={1}>\n              <SystemSetting />\n            </CustomTabPanel>\n            <CustomTabPanel value={value} index={2}>\n              <OtherSetting />\n            </CustomTabPanel>\n          </Box>\n        </AdminContainer>\n      </Card>\n    </>\n  );\n};\n\nexport default Setting;\n"],"names":["SubCard","forwardRef","children","content","contentClass","darkTitle","secondary","sx","contentSX","title","subTitle","others","ref","theme","useTheme","_jsxs","Card","border","typography","boxShadow","_jsx","CardHeader","p","Typography","variant","action","subheader","Divider","opacity","CardContent","className","defaultProps","require","OperationSetting","now","Date","inputs","setInputs","useState","QuotaForNewUser","QuotaForInviter","QuotaForInvitee","QuotaRemindThreshold","PreConsumedQuota","ModelRatio","CompletionRatio","GroupRatio","TopUpLink","ChatLink","QuotaPerUnit","AutomaticDisableChannelEnabled","AutomaticEnableChannelEnabled","ChannelDisableThreshold","LogConsumeEnabled","DisplayInCurrencyEnabled","DisplayTokenStatEnabled","ApproximateTokenEnabled","RetryTimes","originInputs","setOriginInputs","loading","setLoading","historyTimestamp","setHistoryTimestamp","getTime","useEffect","async","res","API","get","success","message","data","newInputs","forEach","item","key","value","JSON","stringify","parse","showError","getOptions","then","updateOption","endsWith","put","handleInputChange","name","event","target","showSuccess","submitConfig","group","verifyJSON","Stack","spacing","justifyContent","alignItems","direction","sm","md","xs","FormControl","fullWidth","InputLabel","htmlFor","OutlinedInput","id","onChange","label","placeholder","disabled","FormControlLabel","marginLeft","control","Checkbox","checked","Button","onClick","LocalizationProvider","dateAdapter","AdapterDayjs","adapterLocale","DateTimePicker","ampm","dayjs","newValue","unix","slotProps","actionBar","actions","delete","Math","floor","deleteHistoryLogs","type","autoComplete","TextField","multiline","maxRows","minRows","filter","createFilterOptions","SystemSetting","PasswordLoginEnabled","PasswordRegisterEnabled","EmailVerificationEnabled","GitHubOAuthEnabled","GitHubClientId","GitHubClientSecret","LarkClientId","LarkClientSecret","OidcEnabled","OidcWellKnown","OidcClientId","OidcClientSecret","OidcAuthorizationEndpoint","OidcTokenEndpoint","OidcUserinfoEndpoint","Notice","SMTPServer","SMTPPort","SMTPAccount","SMTPFrom","SMTPToken","ServerAddress","Footer","WeChatAuthEnabled","WeChatServerAddress","WeChatServerToken","WeChatAccountQRCodeImageURL","TurnstileCheckEnabled","TurnstileSiteKey","TurnstileSecretKey","RegisterEnabled","EmailDomainRestrictionEnabled","EmailDomainWhitelist","MessagePusherAddress","MessagePusherToken","setEmailDomainWhitelist","showPasswordWarningModal","setShowPasswordWarningModal","split","startsWith","_Fragment","Grid","container","removeTrailingSlash","Autocomplete","multiple","freeSolo","options","e","filterSelectedOptions","renderInput","params","filterOptions","filtered","inputValue","isExisting","some","option","push","join","href","rel","Alert","severity","wordWrap","err","Dialog","open","onClose","maxWidth","DialogTitle","margin","fontWeight","lineHeight","padding","fontSize","DialogContent","DialogActions","color","OtherSetting","About","SystemName","Logo","HomePageContent","Theme","showUpdateModal","setShowUpdateModal","updateData","setUpdateData","tag_name","body","process","marked","submitOption","dangerouslySetInnerHTML","__html","window","location","CustomTabPanel","props","index","other","role","hidden","Box","a11yProps","Setting","useLocation","navigate","useNavigate","hash","replace","tabMap","operation","system","setValue","handleHashChange","addEventListener","removeEventListener","AdminContainer","width","borderBottom","borderColor","Tabs","handleChange","hashArray","Object","keys","scrollButtons","Tab","icon","IconActivity","iconPosition","IconSettings","IconSettings2"],"sourceRoot":""}